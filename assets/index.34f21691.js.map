{"version":3,"file":"index.34f21691.js","sources":["../../../../../../../@vite-plugin-pwa/virtual:pwa-register/react","../../src/Button.tsx","../../src/formatPokemonName.ts","../../src/data.ts","../../src/PercentBar.tsx","../../src/DexCoverage.tsx","../../src/cssType.ts","../../src/Matchups.tsx","../../src/TypeSelector.tsx","../../src/useSearch.tsx","../../src/useTypeCount.ts","../../src/ScreenDefense.tsx","../../src/useScrollToFragment.ts","../../src/updateArrayAt.ts","../../src/Select.tsx","../../src/useLanguage.ts","../../src/useTheme.ts","../../src/ScreenMore.tsx","../../src/MultiTypeSelector.tsx","../../src/ScreenOffense.tsx","../../src/settings.ts","../../src/getWeatherBoosted.ts","../../src/LinkButton.tsx","../../src/Paginator.tsx","../../src/pickTranslation.ts","../../src/IconSearch.tsx","../../src/IconClear.tsx","../../src/Search.tsx","../../src/ScreenPokedex.tsx","../../src/getImage.ts","../../src/ScreenPokedexHelp.tsx","../../src/ScreenWeaknessCoverage.tsx","../../src/saveFile.tsx","../../src/pickFile.ts","../../src/App.tsx","../../src/useUpdateSW.ts","../../src/useFetchJSON.ts","../../src/ErrorBoundary.tsx","../../src/ScreenError.tsx","../../src/main.tsx"],"sourcesContent":["// src/client/build/react.ts\nimport { useState } from \"react\";\n\n// src/client/build/register.ts\nimport { Workbox, messageSW } from \"workbox-window\";\nvar autoUpdateMode = \"false\";\nvar auto = autoUpdateMode === \"true\";\nfunction registerSW(options = {}) {\n  const {\n    immediate = false,\n    onNeedRefresh,\n    onOfflineReady,\n    onRegistered,\n    onRegisterError\n  } = options;\n  let wb;\n  let registration;\n  const updateServiceWorker = async (reloadPage = true) => {\n    if (!auto) {\n      if (reloadPage) {\n        wb == null ? void 0 : wb.addEventListener(\"controlling\", (event) => {\n          if (event.isUpdate)\n            window.location.reload();\n        });\n      }\n      if (registration && registration.waiting) {\n        await messageSW(registration.waiting, { type: \"SKIP_WAITING\" });\n      }\n    }\n  };\n  if (\"serviceWorker\" in navigator) {\n    wb = new Workbox(\"/pkmn.help/sw.js\", { scope: \"/pkmn.help/\" });\n    wb.addEventListener(\"activated\", (event) => {\n      if (event.isUpdate)\n        auto && window.location.reload();\n      else\n        onOfflineReady == null ? void 0 : onOfflineReady();\n    });\n    if (!auto) {\n      const showSkipWaitingPrompt = () => {\n        onNeedRefresh == null ? void 0 : onNeedRefresh();\n      };\n      wb.addEventListener(\"waiting\", showSkipWaitingPrompt);\n      wb.addEventListener(\"externalwaiting\", showSkipWaitingPrompt);\n    }\n    wb.register({ immediate }).then((r) => {\n      registration = r;\n      onRegistered == null ? void 0 : onRegistered(r);\n    }).catch((e) => {\n      onRegisterError == null ? void 0 : onRegisterError(e);\n    });\n  }\n  return updateServiceWorker;\n}\n\n// src/client/build/react.ts\nfunction useRegisterSW(options = {}) {\n  const {\n    immediate = true,\n    onNeedRefresh,\n    onOfflineReady,\n    onRegistered,\n    onRegisterError\n  } = options;\n  const [needRefresh, setNeedRefresh] = useState(false);\n  const [offlineReady, setOfflineReady] = useState(false);\n  const [updateServiceWorker] = useState(() => {\n    return registerSW({\n      immediate,\n      onOfflineReady() {\n        setOfflineReady(true);\n        onOfflineReady == null ? void 0 : onOfflineReady();\n      },\n      onNeedRefresh() {\n        setNeedRefresh(true);\n        onNeedRefresh == null ? void 0 : onNeedRefresh();\n      },\n      onRegistered,\n      onRegisterError\n    });\n  });\n  return {\n    needRefresh: [needRefresh, setNeedRefresh],\n    offlineReady: [offlineReady, setOfflineReady],\n    updateServiceWorker\n  };\n}\nexport {\n  useRegisterSW\n};\n","import classNames from \"classnames\";\nimport * as React from \"react\";\n\nexport function Button({\n  className,\n  ...props\n}: React.ButtonHTMLAttributes<HTMLButtonElement>) {\n  return <button {...props} className={classNames(className, baseClasses)} />;\n}\n\nconst baseClasses = classNames(\n  \"no-underline\",\n  \"ba br2 pv2 ph3\",\n  \"b f5\",\n  \"SimpleFocus\",\n  \"border1 button-shadow button-bg button-bg-hover color-inherit active-squish\"\n);\n","export function formatPokemonName({\n  speciesName,\n  formName,\n}: {\n  speciesName: string;\n  formName: string;\n}): string {\n  return [speciesName, parenthesize(formName)].filter((s) => s).join(\" \");\n}\n\nfunction parenthesize(string?: string): string {\n  if (string) {\n    return `(${string})`;\n  }\n  return \"\";\n}\n","import { closest } from \"fastest-levenshtein\";\n\nexport interface Pokemon {\n  id: string;\n  name: string;\n  speciesNames: Record<string, string>;\n  formNames: Record<string, string>;\n  number: number;\n  types: Type[];\n  hp: number;\n  attack: number;\n  defense: number;\n  spAttack: number;\n  spDefense: number;\n  speed: number;\n  bulbapediaURL: string;\n}\n\nexport enum Type {\n  NORMAL = \"normal\",\n  FIGHTING = \"fighting\",\n  FLYING = \"flying\",\n  POISON = \"poison\",\n  GROUND = \"ground\",\n  ROCK = \"rock\",\n  BUG = \"bug\",\n  GHOST = \"ghost\",\n  STEEL = \"steel\",\n  FIRE = \"fire\",\n  WATER = \"water\",\n  GRASS = \"grass\",\n  ELECTRIC = \"electric\",\n  PSYCHIC = \"psychic\",\n  ICE = \"ice\",\n  DRAGON = \"dragon\",\n  DARK = \"dark\",\n  FAIRY = \"fairy\",\n  NONE = \"none\",\n}\n\nfunction isType(str: string): str is Type {\n  return types.some((t) => t === str);\n}\n\nexport function typesFromString(str: string): Type[] {\n  return [...new Set(str.split(/\\s+/).filter(isType))];\n}\n\nfunction isTypeOrNone(str: string): str is Type {\n  return typesOrNone.some((t) => t === str);\n}\n\nexport function typesOrNoneFromString(str: string): Type[] {\n  return str.split(/\\s+/).filter(isTypeOrNone);\n}\n\nexport const types = [\n  Type.NORMAL,\n  Type.FIGHTING,\n  Type.FLYING,\n  Type.POISON,\n  Type.GROUND,\n  Type.ROCK,\n  Type.BUG,\n  Type.GHOST,\n  Type.STEEL,\n  Type.FIRE,\n  Type.WATER,\n  Type.GRASS,\n  Type.ELECTRIC,\n  Type.PSYCHIC,\n  Type.ICE,\n  Type.DRAGON,\n  Type.DARK,\n  Type.FAIRY,\n];\n\nexport const typesOrNone = [...types, Type.NONE];\n\nexport function stringToType(string: string, fallback: Type): Type {\n  string = string.toLowerCase().replace(/[^a-z]/, \"\");\n  if (string === \"\") {\n    return fallback;\n  }\n  return closest(string, typesOrNone) as Type;\n}\n\nconst rawData = [\n  [1, 1, 1, 1, 1, 0.5, 1, 0, 0.5, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n  [2, 1, 0.5, 0.5, 1, 2, 0.5, 0, 2, 1, 1, 1, 1, 0.5, 2, 1, 2, 0.5],\n  [1, 2, 1, 1, 1, 0.5, 2, 1, 0.5, 1, 1, 2, 0.5, 1, 1, 1, 1, 1],\n  [1, 1, 1, 0.5, 0.5, 0.5, 1, 0.5, 0, 1, 1, 2, 1, 1, 1, 1, 1, 2],\n  [1, 1, 0, 2, 1, 2, 0.5, 1, 2, 2, 1, 0.5, 2, 1, 1, 1, 1, 1],\n  [1, 0.5, 2, 1, 0.5, 1, 2, 1, 0.5, 2, 1, 1, 1, 1, 2, 1, 1, 1],\n  [1, 0.5, 0.5, 0.5, 1, 1, 1, 0.5, 0.5, 0.5, 1, 2, 1, 2, 1, 1, 2, 0.5],\n  [0, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 0.5, 1],\n  [1, 1, 1, 1, 1, 2, 1, 1, 0.5, 0.5, 0.5, 1, 0.5, 1, 2, 1, 1, 2],\n  [1, 1, 1, 1, 1, 0.5, 2, 1, 2, 0.5, 0.5, 2, 1, 1, 2, 0.5, 1, 1],\n  [1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 0.5, 0.5, 1, 1, 1, 0.5, 1, 1],\n  [1, 1, 0.5, 0.5, 2, 2, 0.5, 1, 0.5, 0.5, 2, 0.5, 1, 1, 1, 0.5, 1, 1],\n  [1, 1, 2, 1, 0, 1, 1, 1, 1, 1, 2, 0.5, 0.5, 1, 1, 0.5, 1, 1],\n  [1, 2, 1, 2, 1, 1, 1, 1, 0.5, 1, 1, 1, 1, 0.5, 1, 1, 0, 1],\n  [1, 1, 2, 1, 2, 1, 1, 1, 0.5, 0.5, 0.5, 2, 1, 1, 0.5, 2, 1, 1],\n  [1, 1, 1, 1, 1, 1, 1, 1, 0.5, 1, 1, 1, 1, 1, 1, 2, 1, 0],\n  [1, 0.5, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 0.5, 0.5],\n  [1, 2, 1, 0.5, 1, 1, 1, 1, 0.5, 0.5, 1, 1, 1, 1, 1, 2, 2, 1],\n];\n\nfunction keyForTypes(t1: Type, t2: Type) {\n  return t1 + \" ~ \" + t2;\n}\n\nexport interface CoverageType {\n  number: string;\n  name: string;\n  types: Type[];\n}\n\nexport function objectToCoverageType(obj: unknown): CoverageType {\n  const {\n    number = \"\",\n    name = \"\",\n    type1 = \"\",\n    type2 = \"\",\n    type3 = \"\",\n  } = obj as Record<string, string | undefined>;\n  const types = removeNones(\n    [type1, type2, type3]\n      .filter((t) => t)\n      .map((t) => stringToType(t, Type.NONE))\n  );\n  return { number, name, types };\n}\n\nconst pairs = rawData.flatMap((row, i) => {\n  return row.map<[string, number]>((data, j) => {\n    return [keyForTypes(types[i], types[j]), data];\n  });\n});\n\nconst table = Object.fromEntries(pairs);\n\nfunction multiply(a: number, b: number): number {\n  return a * b;\n}\n\nexport function removeNones(types: Type[]): Type[] {\n  return types.filter((t) => t !== Type.NONE);\n}\n\nfunction matchupForPair(t1: Type, t2: Type): number {\n  const key = keyForTypes(t2, t1);\n  const val = table[key];\n  if (val === undefined) {\n    throw new Error(`matchupForPair: ${t1} vs ${t2}`);\n  }\n  return val;\n}\n\nexport function matchupFor(defenseTypes: Type[], offenseType: Type): number {\n  return defenseTypes\n    .filter((t) => t !== Type.NONE)\n    .map((t) => matchupForPair(t, offenseType))\n    .reduce(multiply, 1);\n}\n\nexport class Matchup {\n  constructor(public type: Type, public effectiveness: number) {}\n}\n\nexport class GroupedMatchups {\n  constructor(public matchups: Matchup[]) {}\n\n  typesFor(effectivenes: number): Type[] {\n    return this.matchups\n      .filter((m) => m.effectiveness === effectivenes)\n      .map((m) => m.type);\n  }\n}\n\nexport function offensiveMatchups(offenseTypes: Type[]): GroupedMatchups {\n  const matchups = types.map((t) => {\n    if (offenseTypes.length === 0) {\n      return new Matchup(t, 1);\n    }\n    const effs = offenseTypes.map((offense) => {\n      return matchupFor([t], offense);\n    });\n    const max = Math.max(...effs);\n    return new Matchup(t, max);\n  });\n  return new GroupedMatchups(matchups);\n}\n\nexport function defensiveMatchups(defenseTypes: Type[]): GroupedMatchups {\n  const matchups = types.map((t) => {\n    const eff = matchupFor(defenseTypes, t);\n    return new Matchup(t, eff);\n  });\n  return new GroupedMatchups(matchups);\n}\n","import * as React from \"react\";\n\nexport interface PercentBarProps {\n  value: number;\n  max: number;\n}\n\nexport function PercentBar({ value, max }: PercentBarProps) {\n  return (\n    <div className=\"flex h1 w-100 Bar-Container\">\n      <div\n        style={{\n          width: (value / max) * 100 + \"%\",\n          background: \"var(--color-fg3)\",\n        }}\n        className=\"Bar-Fill\"\n      ></div>\n    </div>\n  );\n}\n\n","import * as React from \"react\";\nimport { CoverageType, matchupFor, Type } from \"./data\";\nimport { PercentBar } from \"./PercentBar\";\n\ninterface DexCoverageProps {\n  coverageTypes: CoverageType[];\n  types: Type[];\n  isLoading: boolean;\n}\n\nconst DexCoverage: React.FC<DexCoverageProps> = ({\n  coverageTypes,\n  types,\n  isLoading,\n}) => {\n  const count = coverageTypes.filter((ct) => {\n    const matchups = types.map((t) => matchupFor(ct.types, t));\n    return matchups.some((effectiveness) => {\n      return effectiveness > 1;\n    });\n  }).length;\n  const total = coverageTypes.length;\n  const ratio = count / total || 0;\n  const percent = (ratio * 100).toFixed(0);\n  return (\n    <div className=\"pt1 tabular-nums flex flex-column lh-copy\">\n      <PercentBar value={count} max={total} />\n      <div className=\"flex items-center\">\n        {isLoading ? (\n          <div className=\"flex-auto tc\">Loading...</div>\n        ) : (\n          <>\n            <div className=\"tl mr2 w3\">{percent}%</div>\n            <div className=\"flex-auto tr\">\n              {count} / {total} forms\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DexCoverage;\n","import { Type } from \"./data\";\n\nexport function cssType(type: Type): string {\n  switch (type) {\n    case Type.FIRE:\n      return \"type-fire\";\n    case Type.WATER:\n      return \"type-water\";\n    case Type.GRASS:\n      return \"type-grass\";\n    case Type.ELECTRIC:\n      return \"type-electric\";\n    case Type.PSYCHIC:\n      return \"type-psychic\";\n    case Type.ICE:\n      return \"type-ice\";\n    case Type.DRAGON:\n      return \"type-dragon\";\n    case Type.DARK:\n      return \"type-dark\";\n    case Type.FAIRY:\n      return \"type-fairy\";\n    case Type.NORMAL:\n      return \"type-normal\";\n    case Type.FIGHTING:\n      return \"type-fighting\";\n    case Type.FLYING:\n      return \"type-flying\";\n    case Type.POISON:\n      return \"type-poison\";\n    case Type.GROUND:\n      return \"type-ground\";\n    case Type.ROCK:\n      return \"type-rock\";\n    case Type.BUG:\n      return \"type-bug\";\n    case Type.GHOST:\n      return \"type-ghost\";\n    case Type.STEEL:\n      return \"type-steel\";\n    case Type.NONE:\n      return \"type-none\";\n    default:\n      throw new Error(`unknown type ${type}`);\n  }\n}\n","import classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  CoverageType,\n  defensiveMatchups,\n  GroupedMatchups,\n  offensiveMatchups,\n  Type,\n} from \"./data\";\nimport DexCoverage from \"./DexCoverage\";\nimport { cssType } from \"./cssType\";\n\ninterface BadgeProps {\n  type: Type;\n}\n\nfunction Badge({ type }: BadgeProps) {\n  return (\n    <div\n      className={classNames(\n        \"type-bg\",\n        cssType(type),\n        \"ba border-vibrant\",\n        \"br2\",\n        \"ttc tc b f5 lh-title\"\n      )}\n      style={{ width: 80, margin: \"0.125rem\", padding: 2 }}\n    >\n      <div className=\"bg-black-40 br1 ba b--black-10 white\">{type}</div>\n    </div>\n  );\n}\n\ninterface SectionProps {\n  title: string;\n  types: Type[];\n}\n\nfunction Section({ title, types }: SectionProps) {\n  if (types.length === 0) {\n    return null;\n  }\n  return (\n    <div>\n      <h2 className=\"f5 mt3 mb0\">{title}</h2>\n      <div className=\"mw5 center MatchupsSection-Container\">\n        {types.map((t) => (\n          <Badge key={`type-${t}`} type={t} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\ninterface MatchupsProps {\n  coverageTypes?: CoverageType[];\n  kind: \"offense\" | \"defense\";\n  types: Type[];\n  formatTitle: (value: string) => string;\n  matchups: GroupedMatchups;\n  fallbackCoverageTypes: CoverageType[];\n  isLoading: boolean;\n}\n\nfunction Matchups({\n  coverageTypes,\n  kind,\n  types,\n  formatTitle,\n  matchups,\n  fallbackCoverageTypes,\n  isLoading,\n}: MatchupsProps) {\n  return (\n    <div className=\"tc pt2\" id={`matchup-${kind}`}>\n      {kind === \"offense\" ? (\n        <div>\n          <h2 className=\"f5 mt3 mb0\">\n            Weakness Coverage{\" \"}\n            <span className=\"normal\">\n              (\n              <Link\n                to=\"/offense/coverage/\"\n                className=\"underline fg-link OutlineFocus\"\n                aria-label=\"Edit weakness coverage\"\n              >\n                Edit\n              </Link>\n              )\n            </span>\n          </h2>\n          <div\n            className={classNames(\n              \"pt1 mw5 center tc\",\n              isLoading && [\"o-30 no-pointer cursor-na\"]\n            )}\n          >\n            <DexCoverage\n              coverageTypes={coverageTypes ?? fallbackCoverageTypes}\n              types={types}\n              isLoading={isLoading}\n            />\n          </div>\n        </div>\n      ) : null}\n      {effectivenessLevels.map((eff) => {\n        return (\n          <Section\n            key={eff}\n            title={formatTitle(displayEffectiveness[eff])}\n            types={matchups.typesFor(eff)}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nconst effectivenessLevels = [8, 4, 2, 1, 1 / 2, 1 / 4, 1 / 8, 0];\n\nconst displayEffectiveness = {\n  [8]: \"8×\",\n  [4]: \"4×\",\n  [2]: \"2×\",\n  [1]: \"1×\",\n  [1 / 2]: \"½×\",\n  [1 / 4]: \"¼×\",\n  [1 / 8]: \"⅛×\",\n  [0]: \"0×\",\n};\n\nexport interface DefenseProps {\n  types: Type[];\n  fallbackCoverageTypes: CoverageType[];\n}\n\nexport function Defense({ types, fallbackCoverageTypes }: DefenseProps) {\n  return (\n    <Matchups\n      kind=\"defense\"\n      types={types}\n      formatTitle={(x) => `Takes ${x} From`}\n      matchups={defensiveMatchups(types)}\n      fallbackCoverageTypes={fallbackCoverageTypes}\n      isLoading={false}\n    />\n  );\n}\n\nexport interface OffenseProps {\n  coverageTypes?: CoverageType[];\n  setCoverageTypes: (types: CoverageType[]) => void;\n  types: Type[];\n  fallbackCoverageTypes: CoverageType[];\n  isLoading: boolean;\n}\n\nexport function Offense({\n  coverageTypes,\n  types,\n  fallbackCoverageTypes,\n  isLoading,\n}: OffenseProps) {\n  return (\n    <Matchups\n      kind=\"offense\"\n      types={types}\n      coverageTypes={coverageTypes}\n      formatTitle={(x) => `Deals ${x} to`}\n      matchups={offensiveMatchups(types)}\n      fallbackCoverageTypes={fallbackCoverageTypes}\n      isLoading={isLoading}\n    />\n  );\n}\n","import classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Type, types, typesOrNone } from \"./data\";\nimport { cssType } from \"./cssType\";\n\nconst buttonInnerHeight = \"1.5rem\";\n\ninterface TypeSelectorProps {\n  onChange(type: Type): void;\n  value: Type;\n  includeNone: boolean;\n  disabledTypes: Type[];\n  name: string;\n}\n\nexport default function TypeSelector({\n  onChange,\n  value,\n  includeNone,\n  disabledTypes,\n  name,\n}: TypeSelectorProps) {\n  const theTypes = includeNone ? typesOrNone : types;\n  const styles = {\n    disabled: \"border3 fg4 bg2 o-60 SimpleFocus pointer-none\",\n    selected: \"border-vibrant2 type-bg SelectedFocus\",\n    normal: \"border1 bg1 fg1 button-bg button-shadow SimpleFocus\",\n  };\n  return (\n    <div className=\"MultiTypeSelector-Container\">\n      {theTypes.map((type) => {\n        const isDisabled = disabledTypes.includes(type);\n        const isSelected = type === value;\n        const styleKey = isDisabled\n          ? \"disabled\"\n          : isSelected\n          ? \"selected\"\n          : \"normal\";\n        return (\n          <label\n            key={type}\n            className={classNames(\n              styles[styleKey],\n              \"db\",\n              \"ba br-pill\",\n              \"pv1 ph2\",\n              \"f5 b\",\n              \"ttc\",\n              \"select-none\",\n              \"SimpleFocus\",\n              \"active-squish\",\n              cssType(type)\n            )}\n          >\n            <span className=\"flex flex-row items-center justify-center\">\n              <input\n                type=\"radio\"\n                name={name}\n                checked={isSelected}\n                disabled={isDisabled}\n                className={classNames(\n                  cssType(type),\n                  \"db RadioCheckType\",\n                  {\n                    disabled: \"border1 o-50\",\n                    selected: \"b--black type-bg\",\n                    normal: \"border-vibrant type-bg\",\n                  }[styleKey],\n                  \"ba br1\",\n                  \"NoFocus\"\n                )}\n                onChange={() => {\n                  onChange(type);\n                }}\n              />\n\n              <span\n                className=\"tl pl2 pr1 flex-auto truncate\"\n                style={{ lineHeight: buttonInnerHeight }}\n              >\n                {type}\n                {isSelected && <span aria-hidden=\"true\">&nbsp;&bull;</span>}\n              </span>\n            </span>\n          </label>\n        );\n      })}\n    </div>\n  );\n}\n","import { useLocation } from \"react-router-dom\";\n\nexport function useSearch() {\n  const location = useLocation();\n  return new URLSearchParams(location.search);\n}\n","import * as React from \"react\";\nimport { useLocalStorage } from \"usehooks-ts\";\n\nexport function useTypeCount(): [\n  string,\n  React.Dispatch<React.SetStateAction<string>>\n] {\n  const [typeCount, setTypeCount] = useLocalStorage(\"type_count\", \"2\");\n  return [typeCount, setTypeCount];\n}\n","import * as React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CoverageType, removeNones, Type, typesFromString } from \"./data\";\nimport * as Matchups from \"./Matchups\";\nimport TypeSelector from \"./TypeSelector\";\nimport { updateArrayAt } from \"./updateArrayAt\";\nimport { useScrollToFragment } from \"./useScrollToFragment\";\nimport { useSearch } from \"./useSearch\";\nimport { useTypeCount } from \"./useTypeCount\";\n\ninterface DefenseProps {\n  setDefenseParams: (params: string) => void;\n  fallbackCoverageTypes: CoverageType[];\n}\n\nexport default function ScreenDefense({\n  setDefenseParams,\n  fallbackCoverageTypes,\n}: DefenseProps) {\n  useScrollToFragment();\n\n  const search = useSearch();\n  const history = useHistory();\n\n  const [typeCount] = useTypeCount();\n\n  const typesString = search.get(\"types\") || \"normal\";\n  const types = typesFromString(typesString).slice(0, Number(typeCount));\n\n  function createParams(types: Type[]): string {\n    types = [...new Set(types)];\n    const params = new URLSearchParams();\n    if (types.length >= 0) {\n      params.set(\"types\", types.join(\" \"));\n    }\n    return \"?\" + params;\n  }\n\n  function updateTypes(types: Type[]) {\n    history.replace({ search: createParams(types) });\n  }\n\n  function updateTypeAt(index: number): (t: Type) => void {\n    return (t: Type) => {\n      updateTypes(removeNones(updateArrayAt(types, index, t)));\n    };\n  }\n\n  const params = createParams(types);\n  React.useEffect(() => {\n    setDefenseParams(params);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params]);\n\n  const classH2 = \"tc f5 mb2 mt4\";\n  return (\n    <main className=\"ph3 pt0 pb4 content-wide center\">\n      <div className=\"dib w-50-ns w-100 v-top\">\n        <h2 className={classH2}>Choose First Type</h2>\n        <TypeSelector\n          name=\"primary\"\n          value={types[0]}\n          onChange={updateTypeAt(0)}\n          disabledTypes={[]}\n          includeNone={false}\n        />\n        <h2 className={classH2}>Choose Second Type</h2>\n        <TypeSelector\n          name=\"secondary\"\n          value={types[1] || Type.NONE}\n          onChange={updateTypeAt(1)}\n          disabledTypes={types.slice(0, 1)}\n          includeNone={true}\n        />\n        {Number(typeCount) === 3 && (\n          <>\n            <h2 className={classH2}>Choose Third Type</h2>\n            <TypeSelector\n              name=\"third\"\n              value={types[2] || Type.NONE}\n              onChange={updateTypeAt(2)}\n              disabledTypes={types.slice(0, 2)}\n              includeNone={true}\n            />\n          </>\n        )}\n      </div>\n      <div className=\"dib w-50-ns w-100 v-top pl3-ns\">\n        <hr className=\"dn-ns subtle-hr mv4\" />\n        <Matchups.Defense\n          types={types}\n          fallbackCoverageTypes={fallbackCoverageTypes}\n        />\n      </div>\n    </main>\n  );\n}\n","import * as React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport function useScrollToFragment() {\n  const fragment = useLocation().hash.slice(1);\n\n  React.useLayoutEffect(() => {\n    if (!fragment) {\n      return;\n    }\n    const element = document.getElementById(fragment);\n    if (element instanceof HTMLElement) {\n      element.scrollIntoView();\n    }\n  }, [fragment]);\n}\n","export function updateArrayAt<T>(array: T[], index: number, value: T): T[] {\n  const newArray = [...array];\n  newArray[index] = value;\n  return newArray;\n}\n","import classNames from \"classnames\";\nimport * as React from \"react\";\n\ninterface SelectProps\n  extends Omit<React.SelectHTMLAttributes<HTMLSelectElement>, \"className\"> {\n  label: string;\n  helpText?: string;\n}\n\nexport function Select({\n  label,\n  \"aria-label\": ariaLabel = label,\n  helpText,\n  ...props\n}: SelectProps) {\n  return (\n    <div>\n      {label && <div className=\"pb1\">{label}</div>}\n      <div className=\"Select\">\n        <select {...props} aria-label={ariaLabel} className={baseClasses} />\n      </div>\n      {helpText && <p className=\"ma0 pt1 fg3 f6\">{helpText}</p>}\n    </div>\n  );\n}\n\nconst baseClasses = classNames(\n  \"db w-100\",\n  \"no-underline\",\n  \"ba br2 pa2 pr4\",\n  \"b f5\",\n  \"SimpleFocus\",\n  \"border1 button-shadow button-bg button-bg-hover color-inherit\"\n);\n","import * as React from \"react\";\nimport { useLocalStorage } from \"usehooks-ts\";\n\nexport function useLanguage(): [\n  string,\n  React.Dispatch<React.SetStateAction<string>>\n] {\n  const [language, setLanguage] = useLocalStorage(\"language\", \"en\");\n  return [language, setLanguage];\n}\n","import * as React from \"react\";\nimport { useLocalStorage } from \"usehooks-ts\";\n\nexport function useTheme(): [\n  string,\n  React.Dispatch<React.SetStateAction<string>>\n] {\n  const [theme, setTheme] = useLocalStorage(\"theme\", \"auto\");\n  return [theme, setTheme];\n}\n","import * as React from \"react\";\nimport { Button } from \"./Button\";\nimport { Select } from \"./Select\";\nimport { useLanguage } from \"./useLanguage\";\nimport { useTheme } from \"./useTheme\";\nimport { useTypeCount } from \"./useTypeCount\";\n\nasync function unregisterServiceWorker() {\n  try {\n    for (const reg of await navigator.serviceWorker.getRegistrations()) {\n      try {\n        await reg.unregister();\n      } catch (err) {\n        console.warn(\"Failed to unregister service worker\", err);\n      }\n    }\n  } finally {\n    location.reload();\n  }\n}\n\ninterface Language {\n  title: string;\n  value: string;\n}\n\nconst languages: Language[] = [\n  { title: \"English\", value: \"en\" },\n  { title: \"Japanese\", value: \"ja\" },\n  { title: \"Japanese (Hiragana/Katakana)\", value: \"ja-Hrkt\" },\n  { title: \"Chinese (Simplified)\", value: \"zh-Hans\" },\n  { title: \"Chinese (Traditional)\", value: \"zh-Hant\" },\n  { title: \"French\", value: \"fr\" },\n  { title: \"German\", value: \"de\" },\n  { title: \"Italian\", value: \"it\" },\n  { title: \"Korean\", value: \"ko\" },\n  { title: \"Spanish\", value: \"es\" },\n];\n\ntype TypeCountValue = \"2\" | \"3\";\n\ninterface TypeCount {\n  title: string;\n  value: TypeCountValue;\n}\n\nconst typeCounts: TypeCount[] = [\n  { title: \"Two types (2)\", value: \"2\" },\n  { title: \"Three types (3)\", value: \"3\" },\n];\n\ntype ThemeValue = \"auto\" | \"light\" | \"dark\";\n\ninterface Theme {\n  title: string;\n  value: ThemeValue;\n}\n\nconst themes: Theme[] = [\n  { title: \"System default\", value: \"auto\" },\n  { title: \"Light\", value: \"light\" },\n  { title: \"Dark\", value: \"dark\" },\n];\n\nexport default function ScreenMore(): JSX.Element {\n  const [language, setLanguage] = useLanguage();\n  const [theme, setTheme] = useTheme();\n  const [typeCount, setTypeCount] = useTypeCount();\n  const year = new Date().getFullYear();\n  return (\n    <main className=\"pa3 center content-narrow lh-copy\">\n      <h2 className=\"lh-title f4\">Contact Me</h2>\n      <p>\n        Hi, I&apos;m{\" \"}\n        <a\n          href=\"https://www.wavebeem.com\"\n          className=\"underline fg-link OutlineFocus\"\n        >\n          Brian\n        </a>{\" \"}\n        (they/them), and I made Pokémon Type Calculator (pkmn.help).\n      </p>\n      <p>\n        Please email your thoughts and thank-yous to{\" \"}\n        <a\n          className=\"underline fg-link OutlineFocus\"\n          href=\"mailto:pkmn@wavebeem.com\"\n        >\n          pkmn@wavebeem.com\n        </a>\n        .\n      </p>\n      <div role=\"presentation\" className=\"mv2 bt border3\" />\n      <h2 className=\"lh-title f4\">Settings</h2>\n      <div className=\"grid gap3 pb2\">\n        <Select\n          label=\"Language\"\n          value={language}\n          helpText=\"Language support is incomplete. Only Pokémon names are translated.\"\n          onChange={(event) => {\n            setLanguage(event.target.value);\n          }}\n        >\n          {languages.map((lang) => {\n            return (\n              <option key={lang.value} value={lang.value}>\n                {lang.title}\n              </option>\n            );\n          })}\n        </Select>\n        <Select\n          label=\"Theme\"\n          value={theme}\n          helpText=\"&ldquo;System default&rdquo; will change automatically depending on your operating system settings.\"\n          onChange={(event) => {\n            setTheme(event.target.value);\n          }}\n        >\n          {themes.map((theme) => {\n            return (\n              <option key={theme.value} value={theme.value}>\n                {theme.title}\n              </option>\n            );\n          })}\n        </Select>\n        <Select\n          label=\"Number of types\"\n          value={typeCount}\n          helpText=\"Pokémon can briefly have three types at once if hit with Forests's Curse or Trick-or-Treat. The third type field is hidden by default since it is rarely used.\"\n          onChange={(event) => {\n            setTypeCount(event.target.value);\n          }}\n        >\n          {typeCounts.map((tc) => {\n            return (\n              <option key={tc.value} value={tc.value}>\n                {tc.title}\n              </option>\n            );\n          })}\n        </Select>\n      </div>\n      <div role=\"presentation\" className=\"mv2 bt border3\" />\n      <h2 className=\"lh-title f4\">Help</h2>\n      <p>This button can help fix issues in the app.</p>\n      <div className=\"mv3\">\n        <Button onClick={unregisterServiceWorker}>\n          Unregister service worker\n        </Button>\n      </div>\n      <div role=\"presentation\" className=\"mv2 bt border3\" />\n      <h2 className=\"lh-title f4\">Privacy</h2>\n      <p>\n        I will never runs ads or steal your personal data. I use{\" \"}\n        <a\n          href=\"https://plausible.io/privacy\"\n          className=\"underline fg-link OutlineFocus\"\n        >\n          Plausible Analytics\n        </a>\n        , which is self-funded, independent, hosted in the EU, and doesn&apos;t\n        store any cookies on your computer.\n      </p>\n      <div role=\"presentation\" className=\"mv2 bt border3\" />\n      <h2 className=\"lh-title f4\">Giving Back</h2>\n      <p>\n        I have spent countless hours improving this site. If you appreciate what\n        I&apos;ve made, please consider donating to charities that support BIPOC\n        and transgender rights.\n      </p>\n      <div role=\"presentation\" className=\"mv2 bt border3\" />\n      <h2 className=\"lh-title f4\">Special Thanks</h2>\n      <ul className=\"lh-copy mt1 ph3\">\n        <li>Jansjo (testing, research)</li>\n        <li>Several anonymous Poké Fans</li>\n      </ul>\n      <div role=\"presentation\" className=\"mv2 bt border3\" />\n      <h2 className=\"lh-title f4\">Open Source</h2>\n      <p>\n        Source code is available on{\" \"}\n        <a\n          href=\"https://github.com/wavebeem/pkmn.help\"\n          className=\"underline fg-link OutlineFocus\"\n        >\n          GitHub\n        </a>\n        .\n      </p>\n      <div role=\"presentation\" className=\"mv2 bt border3\" />\n      <h2 className=\"lh-title f4\">Legal Info</h2>\n      <p>\n        Pokémon &copy; 2002&ndash;{year} Pokémon. &copy; 1995&ndash;{year}{\" \"}\n        Nintendo/Creatures Inc./GAME FREAK inc. &trade;, &reg; and Pokémon\n        character names are trademarks of Nintendo.\n      </p>\n      <p>\n        No copyright or trademark infringement is intended in using Pokémon\n        content on this page.\n      </p>\n      <p>\n        Pokédex data from{\" \"}\n        <a\n          className=\"underline fg-link OutlineFocus\"\n          href=\"https://pokeapi.co/\"\n        >\n          PokéAPI\n        </a>\n        .\n      </p>\n      <p>\n        pkmn.help &copy; 2013&ndash;{year}{\" \"}\n        <a\n          href=\"https://www.wavebeem.com\"\n          className=\"underline fg-link OutlineFocus\"\n        >\n          Brian Mock\n        </a>\n        .\n      </p>\n    </main>\n  );\n}\n","import classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Type, types } from \"./data\";\nimport { cssType } from \"./cssType\";\n\nconst buttonInnerHeight = \"1.5rem\";\n\ninterface TypeSelectorProps {\n  onChange(types: Type[]): void;\n  value: Type[];\n}\n\nexport default function MultiTypeSelector({\n  onChange,\n  value,\n}: TypeSelectorProps) {\n  const styles = {\n    selected:\n      \"border-vibrant2 type-bg no-box-shadow button-shadow SelectedFocus\",\n    normal: \"border1 bg1 fg1 button-bg button-shadow SimpleFocus\",\n  };\n  return (\n    <div className=\"MultiTypeSelector-Container\">\n      {types.map((type) => {\n        const isChecked = value.includes(type);\n        const styleKey = isChecked ? \"selected\" : \"normal\";\n        return (\n          <label\n            key={type}\n            className={classNames(\n              styles[styleKey],\n              \"db\",\n              \"ba br1\",\n              \"pv1 ph2\",\n              \"f5 b\",\n              \"ttc\",\n              \"select-none\",\n              \"SimpleFocus\",\n              \"active-squish\",\n              cssType(type)\n            )}\n          >\n            <span className=\"flex flex-row items-center justify-center\">\n              <input\n                type=\"checkbox\"\n                checked={isChecked}\n                className={classNames(\n                  cssType(type),\n                  \"db RadioCheckType\",\n                  {\n                    selected: \"b--black type-bg\",\n                    normal: \"border-vibrant type-bg\",\n                  }[styleKey],\n                  \"ba br1\",\n                  \"NoFocus\"\n                )}\n                onChange={() => {\n                  const types = new Set(value);\n                  if (isChecked) {\n                    types.delete(type);\n                  } else {\n                    types.add(type);\n                  }\n                  // Should we sort based on the type order on the page rather than\n                  // alphabetical? I'll just stick with alphabetical for now.\n                  onChange([...types].sort());\n                }}\n              />\n\n              <span\n                className=\"tl pl2 pr1 flex-auto truncate\"\n                style={{ lineHeight: buttonInnerHeight }}\n              >\n                {type}\n                {isChecked && <span aria-hidden=\"true\">&nbsp;&bull;</span>}\n              </span>\n            </span>\n          </label>\n        );\n      })}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CoverageType, Type, typesFromString } from \"./data\";\nimport * as Matchups from \"./Matchups\";\nimport MultiTypeSelector from \"./MultiTypeSelector\";\nimport { useSearch } from \"./useSearch\";\n\ninterface OffenseProps {\n  coverageTypes?: CoverageType[];\n  setCoverageTypes: (types: CoverageType[]) => void;\n  setOffenseParams: (params: string) => void;\n  fallbackCoverageTypes: CoverageType[];\n  isLoading: boolean;\n}\n\nexport default function ScreenOffense({\n  coverageTypes,\n  setCoverageTypes,\n  setOffenseParams,\n  fallbackCoverageTypes,\n  isLoading,\n}: OffenseProps) {\n  const search = useSearch();\n  const history = useHistory();\n  const offenseTypes = typesFromString(search.get(\"types\") || \"\");\n\n  function createParams(types: Type[]): string {\n    const params = new URLSearchParams();\n    if (types.length > 0) {\n      params.set(\"types\", types.join(\" \"));\n    }\n    return \"?\" + params;\n  }\n\n  const updateOffenseTypes = (types: Type[]) => {\n    history.replace({ search: createParams(types) });\n  };\n\n  const params = createParams(offenseTypes);\n  React.useEffect(() => {\n    setOffenseParams(params);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params]);\n\n  const classH2 = \"tc f5 mb2 mt4\";\n  return (\n    <main className=\"ph3 pt0 pb4 content-wide center\">\n      <div className=\"dib w-50-ns w-100 v-top\">\n        <h2 className={classH2}>Choose Types</h2>\n        <MultiTypeSelector value={offenseTypes} onChange={updateOffenseTypes} />\n      </div>\n      <div className=\"dib w-50-ns w-100 v-top pl3-ns\">\n        <hr className=\"dn-ns subtle-hr mv4\" />\n        <Matchups.Offense\n          coverageTypes={coverageTypes}\n          setCoverageTypes={setCoverageTypes}\n          types={offenseTypes}\n          fallbackCoverageTypes={fallbackCoverageTypes}\n          isLoading={isLoading}\n        />\n      </div>\n    </main>\n  );\n}\n","// Documentation for import.meta.env variables\r\n// https://vitejs.dev/guide/env-and-mode.html\r\n\r\nexport const PUBLIC_PATH = new URL(\r\n  import.meta.env.BASE_URL,\r\n  window.location.href\r\n).href;\r\n","// https://niantic.helpshift.com/a/pokemon-go/?s=finding-evolving-hatching&f=weather-boosts&l=en&p=web\n\nconst weatherBoosted: { [key: string]: any } = {\n  normal: 'Partly cloudy',\n  fighting: 'Cloudy',\n  flying: 'Windy',\n  poison: 'Cloudy',\n  ground: 'Sunny/Clear',\n  rock: 'Partly cloudy',\n  bug: 'Rainy',\n  ghost: 'Fog',\n  steel: 'Snow',\n  fire: 'Sunny/Clear',\n  water: 'Rainy',\n  grass: 'Sunny/Clear',\n  electric: 'Rainy',\n  psychic: 'Windy',\n  ice: 'Snow',\n  dragon: 'Windy',\n  dark: 'Fog',\n  fairy: 'Cloudy',\n  none: '',\n}\n\nexport function getWeatherBoosted(type: string): string {\n  return weatherBoosted[type] || weatherBoosted.none;\n}\n","import classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Link, LinkProps } from \"react-router-dom\";\n\ninterface LinkButtonProps extends LinkProps {\n  disabled?: boolean;\n}\n\nexport function LinkButton({\n  disabled = false,\n  to,\n  className,\n  ...props\n}: LinkButtonProps) {\n  if (disabled) {\n    // React Router <Link> requires the `to` prop, but rendering an <a> without\n    // an `href` works better for \"disabling\" a link\n    return (\n      <a\n        {...props}\n        className={classNames(\n          className,\n          baseClasses,\n          \"border3 fg4 bg-transparent no-pointer\"\n        )}\n      />\n    );\n  }\n  return (\n    <Link\n      {...props}\n      to={to}\n      tabIndex={0}\n      onClick={props.onClick}\n      className={classNames(\n        className,\n        baseClasses,\n        \"border1 button-shadow button-bg button-bg-hover color-inherit active-squish\"\n      )}\n    />\n  );\n}\n\nconst baseClasses = classNames(\n  \"no-underline\",\n  \"db\",\n  \"pv1 ph2 pv2-ns ph3-ns\",\n  \"ba br2\",\n  \"b f5\",\n  \"SimpleFocus\"\n);\n","import classNames from \"classnames\";\nimport * as React from \"react\";\nimport { LinkButton } from \"./LinkButton\";\n\nenum Location {\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n}\n\ninterface PageSelectorProps {\n  numPages: number;\n  pageItems: any[];\n  location: Location;\n  currentPage: number;\n  urlForPage: (page: number) => string;\n  hasPrev: boolean;\n  hasNext: boolean;\n}\n\nfunction PageSelector({\n  numPages,\n  pageItems,\n  location,\n  currentPage,\n  urlForPage,\n  hasPrev,\n  hasNext,\n}: PageSelectorProps) {\n  // Attempt to stay anchored to the top or bottom of the page when using\n  // pagination buttons to avoid the screen jumping around and stuff\n  const [scrollTo, setScrollTo] = React.useState<Location | undefined>(\n    undefined\n  );\n\n  React.useLayoutEffect(() => {\n    if (scrollTo === Location.TOP) {\n      window.scrollTo(0, 0);\n    } else if (scrollTo === Location.BOTTOM) {\n      window.scrollTo(0, document.body.scrollHeight);\n    }\n    setScrollTo(undefined);\n  }, [scrollTo]);\n\n  return (\n    <div\n      className={classNames(\n        \"items-center mv3\",\n        pageItems.length === 0 ? \"dn\" : \"flex\"\n      )}\n    >\n      <LinkButton\n        onClick={() => {\n          setScrollTo(location);\n        }}\n        disabled={!hasPrev}\n        to={urlForPage(0)}\n        aria-label=\"First\"\n      >\n        &laquo;\n      </LinkButton>\n      <div className=\"pr1\" />\n      <LinkButton\n        onClick={() => {\n          setScrollTo(location);\n        }}\n        disabled={!hasPrev}\n        to={urlForPage(currentPage - 1)}\n        aria-label=\"Previous\"\n      >\n        <span role=\"presentation\">&lsaquo; </span>Prev\n      </LinkButton>\n      <div className=\"flex-auto tc b f5 tabular-nums\">\n        {(currentPage + 1).toString().padStart(numPages.toString().length, \"0\")}\n        {\" / \"}\n        {numPages}\n      </div>\n      <LinkButton\n        onClick={() => {\n          setScrollTo(location);\n        }}\n        disabled={!hasNext}\n        to={urlForPage(currentPage + 1)}\n        aria-label=\"Next\"\n      >\n        Next<span role=\"presentation\"> &rsaquo;</span>\n      </LinkButton>\n      <div className=\"pr1\" />\n      <LinkButton\n        onClick={() => {\n          setScrollTo(location);\n        }}\n        disabled={!hasNext}\n        to={urlForPage(numPages - 1)}\n        aria-label=\"Last\"\n      >\n        &raquo;\n      </LinkButton>\n    </div>\n  );\n}\n\ninterface PaginatorProps<T> {\n  urlForPage: (page: number) => string;\n  currentPage: number;\n  pageSize: number;\n  emptyState: any;\n  items: T[];\n  renderPage: (items: T[]) => any;\n}\n\nexport default function Paginator<T>({\n  urlForPage,\n  currentPage,\n  pageSize,\n  emptyState,\n  items,\n  renderPage,\n}: PaginatorProps<T>) {\n  const numPages = Math.ceil(items.length / pageSize);\n  const hasPrev = currentPage > 0;\n  const hasNext = currentPage < numPages - 1;\n  const i = pageSize * currentPage;\n  const pageItems = items.slice(i, i + pageSize);\n  return (\n    <div>\n      <PageSelector\n        location={Location.TOP}\n        numPages={numPages}\n        pageItems={pageItems}\n        hasPrev={hasPrev}\n        hasNext={hasNext}\n        currentPage={currentPage}\n        urlForPage={urlForPage}\n      />\n      {pageItems.length === 0 ? emptyState : renderPage(pageItems)}\n      <PageSelector\n        location={Location.BOTTOM}\n        numPages={numPages}\n        pageItems={pageItems}\n        hasPrev={hasPrev}\n        hasNext={hasNext}\n        currentPage={currentPage}\n        urlForPage={urlForPage}\n      />\n    </div>\n  );\n}\n","export function pickTranslation(obj: Record<string, string>): string {\n  // Browsers typically only include a region code after the language, but\n  // PokéAPI tells us the script instead. Map the region codes to script codes\n  // for Simplified vs Traditional Chinese\n  const languages = navigator.languages\n    .map((s) => s.toLowerCase())\n    .map((s) => {\n      if (s === \"zh-tw\" || s === \"zh-hk\" || s === \"zh-mo\") {\n        return \"zh-Hant\";\n      }\n      if (s === \"zh-cn\" || s === \"zh-sg\") {\n        return \"zh-Hans\";\n      }\n      // Remove the region code because we don't support it for other languages\n      return s.split(\"-\")[0];\n    });\n  for (const lang of languages) {\n    if (lang in obj) {\n      return obj[lang];\n    }\n  }\n  return obj.en;\n}\n","import * as React from \"react\";\n\nexport function IconSearch(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M16,10c-.41,7.68-12,7.75-12,0s11.59-7.69,12,0c.1,1.92,3.1,1.93,3,0-.26-4.88-3.91-9-9-9a9.1,9.1,0,0,0-9,9,9.08,9.08,0,0,0,8.59,9c5.25.23,9.14-3.93,9.41-9C19.1,8.07,16.1,8.08,16,10Z\" />\n      <path d=\"M14.44,16.56l5,5a1.5,1.5,0,0,0,2.12-2.12l-5-5a1.5,1.5,0,0,0-2.12,2.12Z\" />\n    </svg>\n  );\n}\n","import * as React from \"react\";\n\nexport function IconClear(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M12,1A11,11,0,1,0,23,12,11,11,0,0,0,12,1Zm2.94,16.56L12,14.25,9.06,17.56c-1.28,1.45-3.4-.68-2.12-2.12L10,12,6.94,8.56C5.66,7.12,7.78,5,9.06,6.44L12,9.75l2.94-3.31c1.28-1.45,3.4.68,2.12,2.12L14,12l3.06,3.44C18.34,16.88,16.23,19,14.94,17.56Z\" />\n    </svg>\n  );\n}\n","import classNames from \"classnames\";\nimport * as React from \"react\";\nimport { IconSearch } from \"./IconSearch\";\nimport { IconClear } from \"./IconClear\";\n\ninterface SearchProps {\n  updateSearch: (search: string) => void;\n  search: string;\n}\n\nexport default function Search({ updateSearch, search }: SearchProps) {\n  const ref = React.useRef<HTMLInputElement>(null);\n  const iconSize = 24;\n  const inputHeight = 36;\n  return (\n    <div className=\"relative mv3\">\n      <IconSearch\n        width={iconSize}\n        height={iconSize}\n        role=\"presentation\"\n        className=\"absolute fg3 fill-currentColor\"\n        style={{ left: 10, top: 8 }}\n      />\n      <input\n        aria-label=\"Search by name, number, or types\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        inputMode=\"search\"\n        autoCapitalize=\"none\"\n        className={classNames(\n          \"f5 w-100 border-box\",\n          \"pv2\",\n          \"SimpleFocus\",\n          \"inset-shadow\",\n          \"br-pill ba\",\n          \"bg1\",\n          \"fg1\",\n          \"border1\"\n        )}\n        style={{ paddingLeft: 40, paddingRight: 40, height: inputHeight }}\n        value={search}\n        onChange={(event) => {\n          updateSearch(event.target.value);\n        }}\n        ref={ref}\n      />\n      <IconClear\n        width={iconSize}\n        height={iconSize}\n        role=\"presentation\"\n        onClick={() => {\n          updateSearch(\"\");\n          if (ref.current) {\n            ref.current.focus();\n          }\n        }}\n        className={classNames(\"absolute fg3 fill-currentColor\", {\n          dn: search === \"\",\n        })}\n        style={{ right: 6, top: 6 }}\n      />\n    </div>\n  );\n}\n","import classnames from \"classnames\";\nimport matchSorter from \"match-sorter\";\nimport * as React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Pokemon, Type, typesOrNoneFromString } from \"./data\";\nimport { getImage } from \"./getImage\";\nimport { formatPokemonName } from \"./formatPokemonName\";\nimport { getWeatherBoosted } from \"./getWeatherBoosted\";\nimport Paginator from \"./Paginator\";\nimport { pickTranslation } from \"./pickTranslation\";\nimport Search from \"./Search\";\n// import StatsTable from \"./StatsTable\";\nimport { useSearch } from \"./useSearch\";\nimport { useDebounce } from \"use-debounce\";\nimport { cssType } from \"./cssType\";\n\nimport DataPvpGL from \"./data-pvp-gl.json\";\nimport DataPvpUL from \"./data-pvp-ul.json\"\nimport DataEvolutions from \"./data-evolutions.json\";\nimport DataBuddyCandies from \"./data-buddy-distances.json\";\n\n\nconst PAGE_SIZE = 20;\nconst nbsp = \"\\u00a0\";\n\ninterface MonsterTypeProps {\n  type: Type;\n  index: number;\n}\n\nfunction MonsterType({ type, index }: MonsterTypeProps) {\n  return (\n    <div\n      className={classnames(\n        cssType(type),\n        \"type-bg\",\n        \"ttc tc flex\",\n        \"pv0 ph2 lh-copy b\",\n        \"br-pill ba border3 f6\",\n        { ml1: index > 0 }\n      )}\n    >\n      {type}\n    </div>\n  );\n}\n\n\nfunction WeatherBoosted({ type, index }: MonsterTypeProps) {\n  return (\n    <div\n      className={classnames(\n        `type-${getWeatherBoosted(type)}`,\n        \"ttc tc flex\",\n        \"pv0 ph2 lh-copy b\",\n        \"br-pill ba border3 f6\",\n        { ml1: index > 0 }\n      )}\n    >\n      {getWeatherBoosted(type)}\n    </div>\n  );\n}\n\nWeatherBoosted.displayName = \"WeatherBoosted\";\n\ninterface MonsterProps {\n  pokemon: Pokemon;\n}\n\n// Find GL or UL best IVs\nfunction findByDex(data: any[], Dex: number) {\n  const el = data.find(el => el.Dex === Dex); // Possibly returns `undefined`\n  if (el) {\n    return (\n      <div className=\"tl ph2\">\n        Level {el.Lvl}\n        <span aria-hidden=\"true\" className=\"o-50\">\n          &nbsp;&bull;&nbsp;\n        </span>\n        CP {el.CP}\n        <span aria-hidden=\"true\" className=\"o-50\">\n          &nbsp;&bull;&nbsp;\n        </span>\n        IV {el.AtkIV}/{el.DefIV}/{el.StaIV}\n      </div>\n    );\n  }\n}\n\n// Find buddy distances to earn a candy by gamepress.gg data\n// Deprecated\n// function findByName(data: any[], Name: string) {\n//   const myName = Name.split('-');\n//   const el = data.find(el => el.title.toLocaleLowerCase().includes(myName[0]));\n//   if (el) {\n//     return (\n//       <div className=\"tl ph2\">\n//         {el.field_buddy_distance_requirement} to earn a candy\n//       </div>\n//     );\n//   }\n// }\n\n// Find buddy distances to earn a candy\n// Data from https://pogoapi.net/api/v1/pokemon_buddy_distances.json\nfunction findByDexToCandy(data: any[], Dex: number) {\n  const el = data.find(el => el.pokemon_id === Dex);\n  if (el) {\n    return el.distance\n  }\n}\n\nfunction findByDexToCandyAll(data: any, Dex: number) {\n  let el = findByDexToCandy(data[1], Dex)\n  if (!el) {\n    el = findByDexToCandy(data[3], Dex)\n  }\n  if (!el) {\n    el = findByDexToCandy(data[5], Dex)\n  }\n  if (!el) {\n    el = findByDexToCandy(data[20], Dex)\n  }\n  if (el) {\n    return (\n      <div className=\"tl ph2\">\n        {el} km to earn a candy\n      </div>\n    );\n  }\n}\n\n\n\n// function findByDexToEvo(data: any[], Dex: number) {\n//   const el = data.find(el => el.pokemon_id === Dex); // Possibly returns `undefined`\n//   if (el) {\n//     return (\n//       <div className=\"tl ph2\">\n//         <Link\n//           className=\"fg-link OutlineFocus\"\n//           style={{ textDecoration: \"none\" }}\n//           to={`/pokedex?q=${el.evolutions[0].pokemon_name}`}\n//         >\n//           {el.evolutions[0].pokemon_name}\n//         </Link> with {el.evolutions[0].candy_required} candies\n//       </div>\n//     );\n//   }\n// }\n\nfunction findByDexToEvolutions(data: any[], Dex: number) {\n  const el = data.find(el => el.pokemon_id === Dex); // Possibly returns `undefined`\n  if (el) {\n    const items = el.evolutions.map(function (name: any) {\n\n      // console.log(name.pokemon_name)\n\n      return (\n        <div className=\"tl ph2\" key={name.pokemon_id}>\n          <Link\n            className=\"fg-link OutlineFocus\"\n            style={{ textDecoration: \"none\" }}\n            to={`/pokedex?q=${name.pokemon_name}`}\n            key={name.pokemon_id}\n          >\n            {name.pokemon_name}</Link>\n          {\" \"} with {name.candy_required} candies\n          {name.item_required ? \" & \" + name.item_required : \"\"}\n          {name.lure_required ? \" & \" + name.lure_required : \"\"}\n          {name.gender_required ? \" & be a \" + name.gender_required : \"\"}\n          {name.must_be_buddy_to_evolve ? \" & must be buddy\" : \"\"}\n          {name.buddy_distance_required ? \" & walked \" + name.buddy_distance_required + \" km\" : \"\"}\n          {name.only_evolves_in_nighttime ? \" & Nighttime\" : \"\"}\n          {name.only_evolves_in_daytime ? \" & Daytime\" : \"\"}\n          {name.no_candy_cost_if_traded ? \" OR trade to evolve with no candy\" : \"\"}\n        </div>\n      );\n    });\n\n    return (\n      <div>\n        {items}\n      </div>\n    );\n  }\n}\n\nfunction findByDexFromEvo(data: any[], Dex: number) {\n  const el = data.find(el => el.evolutions[0].pokemon_id === Dex); // Possibly returns `undefined`\n  if (el) {\n    // console.log(el.evolutions[0].candy_required);\n    return (\n      <div className=\"tl ph2\">\n        <Link\n          className=\"fg-link OutlineFocus\"\n          style={{ textDecoration: \"none\" }}\n          to={`/pokedex?q=${el.pokemon_name}`}\n        >\n          {el.pokemon_name}\n        </Link> by {el.evolutions[0].candy_required} candies\n      </div>\n    );\n  }\n}\n\n\nfunction Monster({ pokemon }: MonsterProps) {\n  const displayNumber = \"#\" + String(pokemon.number).padStart(3, \"0\");\n  const params = new URLSearchParams({ types: pokemon.types.join(\" \") });\n  const speciesName = pickTranslation(pokemon.speciesNames);\n  const formName = pickTranslation(pokemon.formNames);\n  const pokemonName = formatPokemonName({ speciesName, formName });\n  return (\n    <div className={classnames(\"fg1 pv3\", \"flex-ns items-center\", \"Monster\")}>\n      <div className=\"flex flex-column\">\n        <div className=\"flex flex-column pa3 br4 bg1 flex ba border4\">\n          <div className=\"flex items-center\">\n            <h2 className=\"mv0 f4\">{speciesName}</h2>\n            <div className=\"ph1 flex-auto\" />\n            <div className=\"fg3 mv0 tabular-nums f5\">{displayNumber}</div>\n          </div>\n          <div className=\"nv2 fg3 f5\">{formName || nbsp}</div>\n\n          <div className=\"pv3 flex justify-center\">\n            <img\n              src={getImage(pokemon.id)}\n              role=\"presentation\"\n              alt=\"\"\n              className=\"db img-crisp\"\n              width={96}\n              height={96}\n            />\n          </div>\n\n          <div className=\"pt2 flex justify-end\">\n            {pokemon.types.map((t, i) => (\n              <MonsterType key={i} type={t} index={i} />\n            ))}\n          </div>\n          <div className=\"pt2 flex justify-end\">\n            {pokemon.types.map((t, i) => (\n              <WeatherBoosted key={i} type={t} index={i} />\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"flex flex-column\">\n\n        <div className=\"StatsTable tabular-nums\">\n          <div className=\"b tl\">GreatLeague</div>\n          {findByDex(DataPvpGL, pokemon.number)}\n        </div>\n        <div className=\"StatsTable tabular-nums\">\n          <div className=\"b tl\">Ultra  League</div>\n          {findByDex(DataPvpUL, pokemon.number)}\n        </div>\n        <div className=\"StatsTable tabular-nums\">\n          <div className=\"b tl\">Buddy distance</div>\n          {findByDexToCandyAll(DataBuddyCandies, pokemon.number)}\n        </div>\n        <div className=\"StatsTable tabular-nums\">\n          <div className=\"b tl\">Evolutions from:</div>\n          {findByDexFromEvo(DataEvolutions, pokemon.number)}\n        </div>\n        <div className=\"StatsTable tabular-nums\">\n          <div className=\"b tl\">Evolutions to:</div>\n          {findByDexToEvolutions(DataEvolutions, pokemon.number)}\n        </div>\n\n        {/* <StatsTable pokemon={pokemon} /> */}\n\n        <div className=\"flex justify-end\">\n          <Link\n            aria-label={`Defense for ${speciesName} (${formName})`}\n            className=\"underline fg-link OutlineFocus\"\n            to={`/defense?${params}#matchup-defense`}\n          >\n            Defense\n          </Link>\n          <span aria-hidden=\"true\" className=\"o-50\">\n            &nbsp;&bull;&nbsp;\n          </span>\n          <Link\n            aria-label={`Offense for ${pokemonName}`}\n            className=\"underline fg-link OutlineFocus\"\n            to={`/offense?${params}#matchup-offense`}\n          >\n            Offense\n          </Link>\n          <span aria-hidden=\"true\" className=\"o-50\">\n            &nbsp;&bull;&nbsp;\n          </span>\n          <a\n            aria-label={`Pokémon GO Wiki page for ${speciesName}`}\n            className=\"underline fg-link OutlineFocus\"\n            href={`https://pokemongo.fandom.com/wiki/${pokemon.name}`}\n          >\n            Wiki\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\ninterface DexProps {\n  allPokemon: Pokemon[];\n  setPokedexParams: (params: string) => void;\n  isLoading: boolean;\n}\n\nexport default function ScreenPokedex({\n  allPokemon,\n  setPokedexParams,\n  isLoading,\n}: DexProps) {\n  const search = useSearch();\n  const history = useHistory();\n  const query = search.get(\"q\") || \"\";\n  const [debouncedQuery] = useDebounce(query, 500);\n  const page = Number(search.get(\"page\") || 1) - 1;\n\n  const searchablePkmn = React.useMemo(() => {\n    return allPokemon.map((p) => {\n      return {\n        ...p,\n        speciesName: pickTranslation(p.speciesNames),\n        formName: pickTranslation(p.formNames),\n      };\n    });\n  }, [allPokemon]);\n\n  const pkmn = React.useMemo(() => {\n    const s = debouncedQuery.trim();\n    if (/^[0-9]+$/.test(s)) {\n      const number = Number(s);\n      return searchablePkmn.filter((p) => p.number === number);\n    }\n    const types = typesOrNoneFromString(s);\n    if (types.length > 0) {\n      return searchablePkmn.filter((p) => {\n        if (types.length === 1) {\n          return p.types[0] === types[0] || p.types[1] === types[0];\n        }\n        if (types.length === 2 && types[1] === Type.NONE) {\n          return p.types.length === 1 && p.types[0] === types[0];\n        }\n        return (\n          p.types.slice().sort().join(\" \") === types.slice().sort().join(\" \")\n        );\n      });\n    }\n    return matchSorter(searchablePkmn, s, {\n      keys: [\"speciesName\", \"formName\", \"number\"],\n    });\n  }, [debouncedQuery, searchablePkmn]);\n\n  function createParams(newQuery: string, newPage: number): string {\n    const params = new URLSearchParams();\n    if (newQuery) {\n      params.set(\"q\", newQuery);\n    }\n    if (Number(newPage) > 0) {\n      params.set(\"page\", String(newPage + 1));\n    }\n    return \"?\" + params;\n  }\n\n  function update(newQuery: string, newPage: number) {\n    const params = createParams(newQuery, newPage);\n    history.replace({ search: params });\n  }\n\n  const params = createParams(query, page);\n  React.useEffect(() => {\n    setPokedexParams(params);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params]);\n\n  return (\n    <main className=\"ph3 mt3 center content-narrow\">\n      <Search\n        search={query}\n        updateSearch={(newQuery) => {\n          update(newQuery, 0);\n        }}\n      />\n      <div className=\"flex justify-between ph2 nt2 pb3 bb border4 f6\">\n        <span className=\"fg3\">Search by name, number, or types</span>\n        <Link\n          to=\"/pokedex/help/\"\n          className=\"underline fg-link OutlineFocus\"\n          aria-label=\"Help, search Pokédex\"\n        >\n          Help\n        </Link>\n      </div>\n      {isLoading ? (\n        <div className=\"Spinner center mt4 f2\" />\n      ) : (\n        <Paginator\n          currentPage={page}\n          urlForPage={(newPage) => {\n            return createParams(query, newPage);\n          }}\n          pageSize={PAGE_SIZE}\n          emptyState={<p className=\"fg4 f4 b tc m0\">No Pokémon found</p>}\n          items={pkmn}\n          renderPage={(page) =>\n            page.map((pokemon) => (\n              <Monster key={pokemon.id} pokemon={pokemon} />\n            ))\n          }\n        />\n      )}\n    </main>\n  );\n}\n\n\n","import { PUBLIC_PATH } from \"./settings\";\n\nexport function getImage(id: string): string {\n  return new URL(`img/${id}.png`, PUBLIC_PATH).href;\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface ScreenPokdexHelpProps {\n  pokedexParams: string;\n}\n\nexport default function ScreenPokdexHelp({\n  pokedexParams,\n}: ScreenPokdexHelpProps) {\n  return (\n    <main className=\"pa3 center content-narrow lh-copy\">\n      <h2 className=\"lh-title f4\">Search by name</h2>\n      <p>\n        You can search for a Pokémon by name. If you only remember part of the\n        Pokémon&apos;s name, It can still probably find it for you. It\n        can&apos;t deal with typos right now though.\n      </p>\n      <h2 className=\"lh-title f4\">Search by number</h2>\n      <p>\n        Search by national dex number. If you want Bulbsaur, just type <i>1</i>,\n        not <i>#001</i>.\n      </p>\n      <h2 className=\"lh-title f4\">Search by type</h2>\n      <p>Here are a few examples of how to seach by type.</p>\n      <ul className=\"pl3\">\n        <li>\n          <code className=\"dib br2 ph2 bg3\">fire</code>\n          <p>\n            Search for Pokémon that have a fire as either of their types in any\n            form (e.g. Charmander, Charizard, Rotom).\n          </p>\n        </li>\n        <li>\n          <code className=\"dib br2 ph2 bg3\">water flying</code>\n          <p>\n            Search for Pokémon that are either water/flying (e.g. Gyarados) or\n            flying/water (e.g. Cramorant).\n          </p>\n        </li>\n        <li>\n          <code className=\"dib br2 ph2 bg3\">grass none</code>\n          <p>\n            Search for Pokémon that are only grass type, no 2nd type (e.g.\n            Tangela, Chikorita).\n          </p>\n        </li>\n      </ul>\n      <p>\n        <b aria-hidden=\"true\">&larr;</b>{\" \"}\n        <Link\n          to={`/pokedex/${pokedexParams}`}\n          className=\"underline fg-link OutlineFocus\"\n        >\n          Back to Pokédex\n        </Link>\n      </p>\n    </main>\n  );\n}\n","import classNames from \"classnames\";\nimport { closest } from \"fastest-levenshtein\";\nimport Papa from \"papaparse\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CoverageType, objectToCoverageType, stringToType, Type } from \"./data\";\nimport { pickFile } from \"./pickFile\";\nimport { saveFile } from \"./saveFile\";\nimport { useTypeCount } from \"./useTypeCount\";\n\nconst buttonClasses = classNames(\n  \"no-underline\",\n  \"db\",\n  \"ba br2 pv1 ph2\",\n  \"b f5\",\n  \"SimpleFocus\",\n  \"active-squish\",\n  \"border1 button-shadow button-bg button-bg-hover color-inherit\"\n);\n\ninterface WeaknessCoverageProps {\n  setCoverageTypes: (types: CoverageType[]) => void;\n  offenseParams: string;\n  fallbackCoverageTypes: CoverageType[];\n  isLoading: boolean;\n}\n\nexport default function ScreenWeaknessCoverage({\n  setCoverageTypes,\n  offenseParams,\n  fallbackCoverageTypes,\n  isLoading,\n}: WeaknessCoverageProps) {\n  const [lastUpdated, setLastUpdated] = React.useState(new Date());\n  const [statusText, setStatusText] = React.useState(\"\");\n  const [typeCount] = useTypeCount();\n  const statusRef = React.useRef<HTMLParagraphElement | null>(null);\n\n  React.useEffect(() => {\n    if (statusRef.current instanceof HTMLElement) {\n      statusRef.current.scrollIntoView();\n    }\n  }, [lastUpdated]);\n\n  function saveCSV() {\n    const fields = [\"Number\", \"Name\", \"Type 1\", \"Type 2\"];\n    if (Number(typeCount) === 3) {\n      fields.push(\"Type 3\");\n    }\n    const csv = Papa.unparse(\n      {\n        fields,\n        data: fallbackCoverageTypes.map((t) => {\n          const data = [t.number, t.name, t.types[0], t.types[1] || \"\"];\n          if (Number(typeCount) === 3) {\n            data.push(t.types[2] || \"\");\n          }\n          return data;\n        }),\n      },\n      {\n        header: true,\n        skipEmptyLines: true,\n      }\n    );\n    saveFile({\n      filename: \"pkmn.help type coverage.csv\",\n      type: \"text/csv\",\n      data: csv,\n    });\n    setStatusText(\"Exported default Pokémon forms\");\n    setLastUpdated(new Date());\n  }\n\n  async function loadCSV() {\n    const file = await pickFile({ accept: \".csv\" });\n    if (!file) {\n      return;\n    }\n    const text = await file.text();\n    const result = Papa.parse(text, {\n      header: true,\n      skipEmptyLines: true,\n      transformHeader: (header) => {\n        return closest(header.toLowerCase().replace(/[a-z0-9]/i, \"\"), [\n          \"number\",\n          \"name\",\n          \"type1\",\n          \"type2\",\n          \"type3\",\n        ]);\n      },\n      transform: (value, field) => {\n        if (field === \"type1\") {\n          return stringToType(value, Type.NORMAL);\n        }\n        if (field === \"type2\" || field === \"type3\") {\n          return stringToType(value, Type.NONE);\n        }\n        return value;\n      },\n    });\n    if (result.errors.length > 0) {\n      alert(\"Error loading CSV. Don't change header names.\");\n      return;\n    }\n    const newCoverageTypes = result.data.map(objectToCoverageType);\n    setStatusText(\n      `Imported ${newCoverageTypes.length} Pokémon forms from \"${file.name}\"`\n    );\n    setCoverageTypes(newCoverageTypes);\n    setLastUpdated(new Date());\n  }\n\n  function loadDefault() {\n    setStatusText(\"Loaded default Pokémon forms\");\n    setCoverageTypes(fallbackCoverageTypes);\n    setLastUpdated(new Date());\n  }\n\n  return (\n    <main className=\"pa3 center content-narrow lh-copy\">\n      <h2 className=\"lh-title f5\">Weakness Coverage</h2>\n      <p>\n        Import/export custom Pokédex CSV files to see weakness coverage for\n        different Pokémon. Create a custom CSV file with just the OU tier\n        Pokémon, or even create your own Pokémon from scratch.\n      </p>\n      <p>\n        CSV data is loaded by column header name, not column order, so you can\n        add or re-order columns if you want (e.g. add a &quot;tier&quot; column,\n        or a &quot;notes&quot; column).\n      </p>\n      <p>\n        CSV files can be edited with Google Sheets, Microsoft Excel, OpenOffice,\n        LibreOffice, Notepad, and more.\n      </p>\n      {isLoading ? (\n        <div className=\"Spinner center mt4 f2\" />\n      ) : (\n        <div className=\"pt2 ButtonGrid\">\n          <button\n            type=\"button\"\n            className={buttonClasses}\n            onClick={() => {\n              saveCSV();\n            }}\n          >\n            Export\n          </button>\n          <span>Export the default Pokédex to a CSV file</span>\n\n          <button\n            type=\"button\"\n            className={buttonClasses}\n            onClick={() => {\n              loadCSV();\n            }}\n          >\n            Import\n          </button>\n          <span>Import an edited Pokédex CSV file</span>\n\n          <button\n            type=\"button\"\n            className={buttonClasses}\n            onClick={() => {\n              loadDefault();\n            }}\n          >\n            Reset\n          </button>\n          <span>Reset to the default Pokédex</span>\n        </div>\n      )}\n      <p className=\"f4 b\" hidden={!statusText} ref={statusRef}>\n        {statusText}\n      </p>\n      <p>\n        <b aria-hidden=\"true\">&larr;</b>{\" \"}\n        <Link\n          to={`/offense/${offenseParams}`}\n          className=\"underline fg-link OutlineFocus\"\n        >\n          Back to offense\n        </Link>\n      </p>\n    </main>\n  );\n}\n","export function saveFile({\n  filename,\n  type,\n  data,\n}: {\n  filename: string;\n  type: string;\n  data: string;\n}): void {\n  const file = new File([data], filename, { type });\n  const url = URL.createObjectURL(file);\n  const a = document.createElement(\"a\");\n  a.download = filename;\n  a.href = url;\n  a.click();\n  URL.revokeObjectURL(url);\n}\n","export async function pickFile({\n  accept,\n}: {\n  accept: string;\n}): Promise<File | undefined> {\n  return new Promise((resolve) => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = accept;\n    input.onchange = () => {\n      resolve(input.files?.[0]);\n    };\n    input.click();\n  });\n}\n","import classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { Link, NavLink, Redirect, Route, Switch, HashRouter } from \"react-router-dom\";\nimport { useMediaQuery } from \"usehooks-ts\";\nimport { useRegisterSW } from \"virtual:pwa-register/react\";\nimport { Button } from \"./Button\";\nimport { CoverageType, Pokemon } from \"./data\";\nimport { formatPokemonName } from \"./formatPokemonName\";\nimport ScreenDefense from \"./ScreenDefense\";\nimport ScreenMore from \"./ScreenMore\";\nimport ScreenOffense from \"./ScreenOffense\";\nimport ScreenPokedex from \"./ScreenPokedex\";\nimport ScreenPokedexHelp from \"./ScreenPokedexHelp\";\nimport ScreenWeaknessCoverage from \"./ScreenWeaknessCoverage\";\nimport { PUBLIC_PATH } from \"./settings\";\nimport { useFetchJSON } from \"./useFetchJSON\";\nimport { useLanguage } from \"./useLanguage\";\nimport { useTheme } from \"./useTheme\";\nimport { useUpdateSW } from \"./useUpdateSW\";\n\nconst bannerClass = classNames([\n  \"button-shadow\",\n  \"bg1 fg1\",\n  \"border2 ba\",\n  \"br2 pa3\",\n  \"justify-center flex\",\n]);\n\nconst tabClass = classNames([\n  \"no-underline\",\n  \"pv2 ph2 f5\",\n  \"TabFocus\",\n  \"b bn\",\n  \"br--top br2\",\n  \"bg-transparent\",\n  \"fg3 bottom-border-thick\",\n]);\n\nconst tabClassActive = classNames([\"fg1 bottom-border-thick-current\"]);\n\nexport default function App() {\n  // Service worker\n  const {\n    needRefresh: [needRefresh, setNeedRefresh],\n    offlineReady: [offlineReady, setOfflineReady],\n    updateServiceWorker,\n  } = useRegisterSW();\n  useUpdateSW();\n\n  // State...\n  const [defenseParams, setDefenseParams] = React.useState(\"\");\n  const [offenseParams, setOffenseParams] = React.useState(\"\");\n  const [pokedexParams, setPokedexParams] = React.useState(\"\");\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [coverageTypes, setCoverageTypes] = React.useState<CoverageType[]>([]);\n  const [fallbackCoverageTypes, setFallbackCoverageTypes] = React.useState<\n    CoverageType[]\n  >([]);\n  const [AllPokemon, setAllPokemon] = React.useState<Pokemon[]>([]);\n\n  const [language] = useLanguage();\n\n  // Theme stuff\n  const [theme] = useTheme();\n  const isDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const isDark = theme === \"dark\" || (theme === \"auto\" && isDarkMode);\n  const themeColor = isDark ? \"hsl(350, 70%, 40%)\" : \"hsl(357, 97%, 46%)\";\n  const themeAuto = isDarkMode ? \"dark\" : \"light\";\n\n  // Load Pokédex JSON\n  const jsonURL = new URL(\"data-pkmn.json\", PUBLIC_PATH).href;\n  const allPokemonResponse = useFetchJSON<Pokemon[]>(jsonURL);\n\n  // Fallback coverage types\n  React.useEffect(() => {\n    if (allPokemonResponse.type !== \"done\") {\n      return;\n    }\n    const allPokemon = allPokemonResponse.data;\n    const fallbackCoverageTypes = allPokemon.map<CoverageType>((pkmn) => {\n      const name = formatPokemonName({\n        speciesName: pkmn.speciesNames[language],\n        formName: pkmn.formNames[language],\n      });\n      const number = String(pkmn.number);\n      const types = pkmn.types;\n      return { number, name, types };\n    });\n    setIsLoading(false);\n    setCoverageTypes(fallbackCoverageTypes);\n    setFallbackCoverageTypes(fallbackCoverageTypes);\n    setAllPokemon(allPokemon);\n  }, [allPokemonResponse, language]);\n\n  return (\n    <HelmetProvider>\n      <div className=\"flex-auto\">\n        <Helmet>\n          <html data-theme={theme} data-theme-auto={themeAuto} />\n          <meta name=\"theme-color\" content={themeColor} />\n        </Helmet>\n        <h1 className=\"f3-ns f4 tc relative white PokeballHeader\">\n          <Link to=\"/\" className=\"no-underline white OutlineFocus\">\n            Pokémon Type Calculator\n          </Link>\n        </h1>\n        <nav\n          className={classNames([\n            \"flex justify-center\",\n            \"bg1\",\n            \"bb border2 TabBar\",\n            \"pt3\",\n          ])}\n        >\n          <NavLink\n            className={tabClass}\n            activeClassName={tabClassActive}\n            to={`/offense/${offenseParams}`}\n          >\n            Offense\n          </NavLink>\n          <NavLink\n            className={tabClass}\n            activeClassName={tabClassActive}\n            to={`/defense/${defenseParams}`}\n          >\n            Defense\n          </NavLink>\n          <NavLink\n            className={tabClass}\n            activeClassName={tabClassActive}\n            to={`/pokedex/${pokedexParams}`}\n          >\n            Pokédex\n          </NavLink>\n          <NavLink\n            className={tabClass}\n            activeClassName={tabClassActive}\n            to=\"/more/\"\n          >\n            More\n          </NavLink>\n        </nav>\n        {(needRefresh || offlineReady) && (\n          <div className=\"ph3 mw6 center grid gap3 pa3\">\n            {needRefresh && (\n              <div className={bannerClass}>\n                <span className=\"flex flex-auto items-center\">\n                  An update is available\n                </span>\n                <Button\n                  className=\"ml3\"\n                  type=\"button\"\n                  onClick={() => {\n                    updateServiceWorker(true);\n                    setNeedRefresh(false);\n                  }}\n                >\n                  Update\n                </Button>\n              </div>\n            )}\n            {offlineReady && (\n              <div className={bannerClass}>\n                <span className=\"flex flex-auto items-center\">\n                  Offline mode is now available\n                </span>\n                <Button\n                  className=\"ml3\"\n                  type=\"button\"\n                  onClick={() => {\n                    setOfflineReady(false);\n                  }}\n                >\n                  Dismiss\n                </Button>\n              </div>\n            )}\n          </div>\n        )}\n        <Switch>\n          <Route\n            exact\n            path=\"/offense/coverage/\"\n            render={() => (\n              <ScreenWeaknessCoverage\n                setCoverageTypes={setCoverageTypes}\n                offenseParams={offenseParams}\n                fallbackCoverageTypes={fallbackCoverageTypes}\n                isLoading={isLoading}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/offense/\"\n            render={() => (\n              <ScreenOffense\n                coverageTypes={coverageTypes}\n                setCoverageTypes={setCoverageTypes}\n                setOffenseParams={setOffenseParams}\n                fallbackCoverageTypes={fallbackCoverageTypes}\n                isLoading={isLoading}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/defense/\"\n            render={() => (\n              <ScreenDefense\n                setDefenseParams={setDefenseParams}\n                fallbackCoverageTypes={fallbackCoverageTypes}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/pokedex/help/\"\n            render={() => <ScreenPokedexHelp pokedexParams={pokedexParams} />}\n          />\n          <Route\n            exact\n            path=\"/pokedex/\"\n            render={() => (\n              <ScreenPokedex\n                setPokedexParams={setPokedexParams}\n                allPokemon={AllPokemon}\n                isLoading={isLoading}\n              />\n            )}\n          />\n          <Route exact path=\"/more/\" component={ScreenMore} />\n          <Redirect to=\"/defense/\" />\n        </Switch>\n      </div>\n    </HelmetProvider>\n  );\n}\n","import * as React from \"react\";\n\ninterface UpdateSW {\n  type: \"updating\" | \"pending\";\n  lastUpdateCheck: number;\n}\n\n// const checkInterval = 60 * 60 * 1000;\nconst checkInterval = 2 * 60 * 1000;\n\nexport function useUpdateSW(): UpdateSW {\n  const [state, setState] = React.useState<UpdateSW>({\n    type: \"pending\",\n    lastUpdateCheck: Date.now(),\n  });\n  React.useEffect(() => {\n    if (import.meta.env.DEV) {\n      return;\n    }\n    const update = async () => {\n      if (document.hidden) {\n        return;\n      }\n      const date = new Date();\n      if (date.valueOf() - state.lastUpdateCheck < checkInterval) {\n        return;\n      }\n      const reg = await navigator.serviceWorker.getRegistration();\n      if (reg) {\n        try {\n          setState({\n            type: \"updating\",\n            lastUpdateCheck: date.valueOf(),\n          });\n          await reg.update();\n        } catch (err) {\n          console.error(err);\n        } finally {\n          setState({\n            type: \"pending\",\n            lastUpdateCheck: date.valueOf(),\n          });\n        }\n      }\n    };\n    document.addEventListener(\"visibilitychange\", update);\n    document.addEventListener(\"focus\", update);\n    return () => {\n      document.removeEventListener(\"visibilitychange\", update);\n      document.removeEventListener(\"focus\", update);\n    };\n  }, [state]);\n  return state;\n}\n","import * as React from \"react\";\n\ntype FetchJSONResponse<T> =\n  | { type: \"pending\" }\n  | { type: \"loading\" }\n  | { type: \"done\"; data: T };\n\nexport function useFetchJSON<T = unknown>(url: string): FetchJSONResponse<T> {\n  const [state, setState] = React.useState<FetchJSONResponse<T>>({\n    type: \"pending\",\n  });\n  const [attemptTime, setAttemptTime] = React.useState(Date.now());\n\n  React.useEffect(() => {\n    async function load() {\n      try {\n        const resp = await fetch(url);\n        const data: T = await resp.json();\n        setState({ type: \"done\", data });\n      } catch (err) {\n        console.warn(`Failed to download ${url}`, err);\n        const retryDelay = 60 * 1000;\n        // Retry every minute until the JSON finishes downloading\n        setTimeout(() => {\n          setAttemptTime(Date.now());\n        }, retryDelay);\n      }\n    }\n    if (url) {\n      load();\n    } else {\n      setState({ type: \"pending\" });\n    }\n  }, [url, attemptTime]);\n\n  return state;\n}\n","import * as React from \"react\";\n\ninterface ErrorBoundaryProps {\n  render: (error: Error) => React.ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  error?: Error;\n}\n\nexport default class ErrorBoundary extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {};\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { error };\n  }\n\n  render() {\n    if (this.state.error) {\n      return this.props.render(this.state.error);\n    }\n    return this.props.children;\n  }\n}\n","import * as React from \"react\";\n\ntype ScreenErrorProps = {\n  error: Error;\n};\n\nconst ScreenError: React.FC<ScreenErrorProps> = ({ error }) => {\n  return (\n    <div className=\"sans-serif ph4 content-narrow f4 center fg2 lh-copy\">\n      <h1>pkmn.help: Error</h1>\n      <p>\n        Please send an email to{\" \"}\n        <a href=\"mailto:brian@wavebeem.com\" className=\"fg-link\">\n          brian@wavebeem.com\n        </a>{\" \"}\n        describing how to reproduce this error, and include the following error\n        message:\n      </p>\n      <pre className=\"f5 bg1 pa2 br2 ba border2 overflow-x-auto\">\n        {error.message}\n      </pre>\n      <p>\n        <b aria-hidden=\"true\">&larr;</b>{\" \"}\n        <a href=\"/\" className=\"f3 fg-link\">\n          Back to pkmn.help\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport default ScreenError;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"tachyons\";\nimport App from \"./App\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport ScreenError from \"./ScreenError\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary render={(error) => <ScreenError error={error} />}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.querySelector(\"#app\")\n);\n"],"names":["options","immediate","onNeedRefresh","onOfflineReady","onRegistered","onRegisterError","needRefresh","setNeedRefresh","useState","offlineReady","setOfflineReady","updateServiceWorker","wb","registration","navigator","Workbox","scope","addEventListener","event","isUpdate","showSkipWaitingPrompt","register","then","r","catch","e","async","reloadPage","location","reload","waiting","messageSW","type","registerSW","_a","className","_b","props","__spreadProps","classNames","baseClasses","speciesName","formName","parenthesize","filter","s","join","string","Type","Type2","str","types","some","t","Set","split","isType","typesOrNone","NORMAL","FIGHTING","FLYING","POISON","GROUND","ROCK","BUG","GHOST","STEEL","FIRE","WATER","GRASS","ELECTRIC","PSYCHIC","ICE","DRAGON","DARK","FAIRY","NONE","fallback","toLowerCase","replace","closest","t1","t2","obj","number","name","type1","type2","type3","removeNones","map","stringToType","pairs","flatMap","row","i","data","j","keyForTypes","table","Object","fromEntries","a","b","types2","defenseTypes","offenseType","key","val","Error","matchupForPair","reduce","multiply","constructor","effectiveness","matchups","typesFor","effectivenes","this","m","offenseTypes","length","Matchup","effs","offense","matchupFor","max","Math","GroupedMatchups","eff","value","style","width","background","DexCoverage","coverageTypes","isLoading","count","ct","total","percent","toFixed","PercentBar","cssType","margin","padding","title","Badge","kind","formatTitle","fallbackCoverageTypes","id","Link","to","effectivenessLevels","Section","displayEffectiveness","Matchups","x","defensiveMatchups","offensiveMatchups","onChange","includeNone","disabledTypes","theTypes","styles","disabled","selected","normal","isDisabled","includes","isSelected","styleKey","checked","lineHeight","location2","useLocation","URLSearchParams","search","typeCount","setTypeCount","useLocalStorage","setDefenseParams","fragment","hash","slice","element","document","getElementById","HTMLElement","scrollIntoView","useSearch","history","useHistory","useTypeCount","typesFromString","get","Number","types22","params2","set","index","array","newArray","updateArrayAt","createParams","params","classH2","TypeSelector","updateTypeAt","Matchups.Defense","_c","label","ariaLabel","helpText","_d","language","setLanguage","theme","setTheme","reg","serviceWorker","getRegistrations","unregister","err","warn","languages","typeCounts","themes","useLanguage","useTheme","year","Date","getFullYear","href","role","Select","target","lang","theme2","tc","Button","onClick","unregisterServiceWorker","isChecked","delete","add","sort","setCoverageTypes","setOffenseParams","MultiTypeSelector","Matchups.Offense","PUBLIC_PATH","URL","window","weatherBoosted","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","none","_e","_f","tabIndex","Location","Location2","numPages","pageItems","currentPage","urlForPage","hasPrev","hasNext","scrollTo","setScrollTo","React.useState","TOP","BOTTOM","body","scrollHeight","LinkButton","toString","padStart","pageSize","emptyState","items","renderPage","ceil","PageSelector","languages2","en","__spreadValues","xmlns","viewBox","d","updateSearch","ref","React.useRef","IconSearch","height","left","top","autoComplete","autoCorrect","inputMode","autoCapitalize","paddingLeft","paddingRight","IconClear","current","focus","dn","right","classnames","ml1","getWeatherBoosted","Dex","el","find","el2","Lvl","CP","AtkIV","DefIV","StaIV","pokemon_id","distance","pokemon","displayNumber","String","pickTranslation","speciesNames","formNames","pokemonName","formatPokemonName","src","alt","MonsterType","WeatherBoosted","findByDex","DataPvpGL","DataPvpUL","findByDexToCandy","findByDexToCandyAll","DataBuddyCandies","evolutions","textDecoration","pokemon_name","candy_required","findByDexFromEvo","DataEvolutions","item_required","lure_required","gender_required","must_be_buddy_to_evolve","buddy_distance_required","only_evolves_in_nighttime","only_evolves_in_daytime","no_candy_cost_if_traded","findByDexToEvolutions","allPokemon","setPokedexParams","query","debouncedQuery","useDebounce","page","searchablePkmn","React.useMemo","p","pkmn","trim","test","isTypeOrNone","matchSorter","keys","newQuery","newPage","Search","Paginator","page2","Monster","pokedexParams","displayName","buttonClasses","offenseParams","lastUpdated","setLastUpdated","statusText","setStatusText","statusRef","fields","push","filename","file","File","url","createObjectURL","createElement","download","click","revokeObjectURL","Papa","unparse","header","skipEmptyLines","accept","Promise","resolve","input","onchange","files","pickFile","text","result","parse","transformHeader","transform","field","errors","newCoverageTypes","objectToCoverageType","hidden","bannerClass","tabClass","tabClassActive","useRegisterSW","state","setState","lastUpdateCheck","now","update","date","valueOf","getRegistration","error","removeEventListener","defenseParams","setIsLoading","setFallbackCoverageTypes","AllPokemon","setAllPokemon","isDarkMode","useMediaQuery","themeColor","themeAuto","allPokemonResponse","attemptTime","setAttemptTime","resp","fetch","json","useFetchJSON","fallbackCoverageTypes2","HelmetProvider","Helmet","content","NavLink","activeClassName","Switch","Route","exact","path","render","ScreenWeaknessCoverage","ScreenOffense","ScreenDefense","ScreenPokedexHelp","ScreenPokedex","component","ScreenMore","Redirect","React.Component","children","ScreenError","message","ReactDOM.render","React.StrictMode","ErrorBoundary","BrowserRouter","App","querySelector"],"mappings":"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"}