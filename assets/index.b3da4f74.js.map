{"version":3,"file":"index.b3da4f74.js","sources":["../../../../../../../@vite-plugin-pwa/virtual:pwa-register/react","../../src/Button.tsx","../../src/data.ts","../../src/PercentBar.tsx","../../src/DexCoverage.tsx","../../src/cssType.ts","../../src/Matchups.tsx","../../src/TypeSelector.tsx","../../src/useSearch.tsx","../../src/ScreenDefense.tsx","../../src/useScrollToFragment.ts","../../src/Select.tsx","../../src/useTheme.ts","../../src/ScreenMore.tsx","../../src/useLanguage.ts","../../src/MultiTypeSelector.tsx","../../src/ScreenOffense.tsx","../../src/settings.ts","../../src/getWeatherBoosted.ts","../../src/LinkButton.tsx","../../src/Paginator.tsx","../../src/pickTranslation.ts","../../src/IconSearch.tsx","../../src/IconClear.tsx","../../src/Search.tsx","../../src/ScreenPokedex.tsx","../../src/getImage.ts","../../src/ScreenPokedexHelp.tsx","../../src/ScreenWeaknessCoverage.tsx","../../src/saveFile.tsx","../../src/pickFile.ts","../../src/App.tsx","../../src/useUpdateSW.ts","../../src/ErrorBoundary.tsx","../../src/ScreenError.tsx","../../src/main.tsx"],"sourcesContent":["// src/client/build/react.ts\nimport { useState } from \"react\";\n\n// src/client/build/register.ts\nimport { Workbox, messageSW } from \"workbox-window\";\nvar autoUpdateMode = \"false\";\nvar auto = autoUpdateMode === \"true\";\nfunction registerSW(options = {}) {\n  const {\n    immediate = false,\n    onNeedRefresh,\n    onOfflineReady,\n    onRegistered,\n    onRegisterError\n  } = options;\n  let wb;\n  let registration;\n  const updateServiceWorker = async (reloadPage = true) => {\n    if (!auto) {\n      if (reloadPage) {\n        wb == null ? void 0 : wb.addEventListener(\"controlling\", (event) => {\n          if (event.isUpdate)\n            window.location.reload();\n        });\n      }\n      if (registration && registration.waiting) {\n        await messageSW(registration.waiting, { type: \"SKIP_WAITING\" });\n      }\n    }\n  };\n  if (\"serviceWorker\" in navigator) {\n    wb = new Workbox(\"/pkmn.help/sw.js\", { scope: \"/pkmn.help/\" });\n    wb.addEventListener(\"activated\", (event) => {\n      if (event.isUpdate)\n        auto && window.location.reload();\n      else\n        onOfflineReady == null ? void 0 : onOfflineReady();\n    });\n    if (!auto) {\n      const showSkipWaitingPrompt = () => {\n        onNeedRefresh == null ? void 0 : onNeedRefresh();\n      };\n      wb.addEventListener(\"waiting\", showSkipWaitingPrompt);\n      wb.addEventListener(\"externalwaiting\", showSkipWaitingPrompt);\n    }\n    wb.register({ immediate }).then((r) => {\n      registration = r;\n      onRegistered == null ? void 0 : onRegistered(r);\n    }).catch((e) => {\n      onRegisterError == null ? void 0 : onRegisterError(e);\n    });\n  }\n  return updateServiceWorker;\n}\n\n// src/client/build/react.ts\nfunction useRegisterSW(options = {}) {\n  const {\n    immediate = true,\n    onNeedRefresh,\n    onOfflineReady,\n    onRegistered,\n    onRegisterError\n  } = options;\n  const [needRefresh, setNeedRefresh] = useState(false);\n  const [offlineReady, setOfflineReady] = useState(false);\n  const [updateServiceWorker] = useState(() => {\n    return registerSW({\n      immediate,\n      onOfflineReady() {\n        setOfflineReady(true);\n        onOfflineReady == null ? void 0 : onOfflineReady();\n      },\n      onNeedRefresh() {\n        setNeedRefresh(true);\n        onNeedRefresh == null ? void 0 : onNeedRefresh();\n      },\n      onRegistered,\n      onRegisterError\n    });\n  });\n  return {\n    needRefresh: [needRefresh, setNeedRefresh],\n    offlineReady: [offlineReady, setOfflineReady],\n    updateServiceWorker\n  };\n}\nexport {\n  useRegisterSW\n};\n","import classNames from \"classnames\";\nimport * as React from \"react\";\n\nexport function Button({\n  className,\n  ...props\n}: React.ButtonHTMLAttributes<HTMLButtonElement>) {\n  return <button {...props} className={classNames(className, baseClasses)} />;\n}\n\nconst baseClasses = classNames(\n  \"no-underline\",\n  \"ba br2 pv2 ph3\",\n  \"b f5\",\n  \"SimpleFocus\",\n  \"border1 button-shadow button-bg button-bg-hover color-inherit active-squish\"\n);\n","import { closest } from \"fastest-levenshtein\";\n\nexport interface Pokemon {\n  id: string;\n  name: string;\n  speciesNames: Record<string, string>;\n  formNames: Record<string, string>;\n  number: number;\n  types: Type[];\n  hp: number;\n  attack: number;\n  defense: number;\n  spAttack: number;\n  spDefense: number;\n  speed: number;\n  bulbapediaURL: string;\n}\n\nexport enum Type {\n  NORMAL = \"normal\",\n  FIGHTING = \"fighting\",\n  FLYING = \"flying\",\n  POISON = \"poison\",\n  GROUND = \"ground\",\n  ROCK = \"rock\",\n  BUG = \"bug\",\n  GHOST = \"ghost\",\n  STEEL = \"steel\",\n  FIRE = \"fire\",\n  WATER = \"water\",\n  GRASS = \"grass\",\n  ELECTRIC = \"electric\",\n  PSYCHIC = \"psychic\",\n  ICE = \"ice\",\n  DRAGON = \"dragon\",\n  DARK = \"dark\",\n  FAIRY = \"fairy\",\n  NONE = \"none\",\n}\n\nfunction isType(str: string): str is Type {\n  return types.some((t) => t === str);\n}\n\nexport function typesFromString(str: string): Type[] {\n  return str.split(/\\s+/).filter(isType);\n}\n\nfunction isTypeOrNone(str: string): str is Type {\n  return typesOrNone.some((t) => t === str);\n}\n\nexport function typesOrNoneFromString(str: string): Type[] {\n  return str.split(/\\s+/).filter(isTypeOrNone);\n}\n\nexport const types = [\n  Type.NORMAL,\n  Type.FIGHTING,\n  Type.FLYING,\n  Type.POISON,\n  Type.GROUND,\n  Type.ROCK,\n  Type.BUG,\n  Type.GHOST,\n  Type.STEEL,\n  Type.FIRE,\n  Type.WATER,\n  Type.GRASS,\n  Type.ELECTRIC,\n  Type.PSYCHIC,\n  Type.ICE,\n  Type.DRAGON,\n  Type.DARK,\n  Type.FAIRY,\n];\n\nexport const typesOrNone = [...types, Type.NONE];\n\nexport function stringToType(string: string, fallback: Type): Type {\n  string = string.toLowerCase().replace(/[^a-z]/, \"\");\n  if (string === \"\") {\n    return fallback;\n  }\n  return closest(string, typesOrNone) as Type;\n}\n\nexport enum Effectiveness {\n  QUADRUPLE = 4,\n  DOUBLE = 2,\n  REGULAR = 1,\n  HALF = 0.5,\n  QUARTER = 0.25,\n  ZERO = 0,\n}\n\nconst rawData = [\n  [1, 1, 1, 1, 1, 0.5, 1, 0, 0.5, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n  [2, 1, 0.5, 0.5, 1, 2, 0.5, 0, 2, 1, 1, 1, 1, 0.5, 2, 1, 2, 0.5],\n  [1, 2, 1, 1, 1, 0.5, 2, 1, 0.5, 1, 1, 2, 0.5, 1, 1, 1, 1, 1],\n  [1, 1, 1, 0.5, 0.5, 0.5, 1, 0.5, 0, 1, 1, 2, 1, 1, 1, 1, 1, 2],\n  [1, 1, 0, 2, 1, 2, 0.5, 1, 2, 2, 1, 0.5, 2, 1, 1, 1, 1, 1],\n  [1, 0.5, 2, 1, 0.5, 1, 2, 1, 0.5, 2, 1, 1, 1, 1, 2, 1, 1, 1],\n  [1, 0.5, 0.5, 0.5, 1, 1, 1, 0.5, 0.5, 0.5, 1, 2, 1, 2, 1, 1, 2, 0.5],\n  [0, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 0.5, 1],\n  [1, 1, 1, 1, 1, 2, 1, 1, 0.5, 0.5, 0.5, 1, 0.5, 1, 2, 1, 1, 2],\n  [1, 1, 1, 1, 1, 0.5, 2, 1, 2, 0.5, 0.5, 2, 1, 1, 2, 0.5, 1, 1],\n  [1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 0.5, 0.5, 1, 1, 1, 0.5, 1, 1],\n  [1, 1, 0.5, 0.5, 2, 2, 0.5, 1, 0.5, 0.5, 2, 0.5, 1, 1, 1, 0.5, 1, 1],\n  [1, 1, 2, 1, 0, 1, 1, 1, 1, 1, 2, 0.5, 0.5, 1, 1, 0.5, 1, 1],\n  [1, 2, 1, 2, 1, 1, 1, 1, 0.5, 1, 1, 1, 1, 0.5, 1, 1, 0, 1],\n  [1, 1, 2, 1, 2, 1, 1, 1, 0.5, 0.5, 0.5, 2, 1, 1, 0.5, 2, 1, 1],\n  [1, 1, 1, 1, 1, 1, 1, 1, 0.5, 1, 1, 1, 1, 1, 1, 2, 1, 0],\n  [1, 0.5, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 0.5, 0.5],\n  [1, 2, 1, 0.5, 1, 1, 1, 1, 0.5, 0.5, 1, 1, 1, 1, 1, 2, 2, 1],\n];\n\nfunction keyForTypes(t1: Type, t2: Type) {\n  return t1 + \" ~ \" + t2;\n}\n\nexport interface CoverageType {\n  number: string;\n  name: string;\n  type1: Type;\n  type2: Type;\n}\n\nexport function objectToCoverageType(obj: unknown): CoverageType {\n  const ct = obj as Partial<CoverageType>;\n  return {\n    number: ct.number || \"\",\n    name: ct.name || \"\",\n    type1: stringToType(ct.type1 || \"\", Type.NORMAL),\n    type2: stringToType(ct.type2 || \"\", Type.NONE),\n  };\n}\n\nconst pairs = rawData.flatMap((row, i) => {\n  return row.map<[string, number]>((data, j) => {\n    return [keyForTypes(types[i], types[j]), data];\n  });\n});\n\nconst table = Object.fromEntries(pairs);\n\nexport function matchupFor(ta1: Type, ta2: Type, tb: Type) {\n  const x1 = table[keyForTypes(tb, ta1)];\n  // Don't allow bogus type combinations, such as Fire/Fire or Fire/None\n  const x2 = ta1 !== ta2 && ta2 !== Type.NONE ? table[keyForTypes(tb, ta2)] : 1;\n  const x3 = x1 * x2;\n  if (x3 === 4) {\n    return Effectiveness.QUADRUPLE;\n  }\n  if (x3 === 2) {\n    return Effectiveness.DOUBLE;\n  }\n  if (x3 === 1) {\n    return Effectiveness.REGULAR;\n  }\n  if (x3 === 0.5) {\n    return Effectiveness.HALF;\n  }\n  if (x3 === 0.25) {\n    return Effectiveness.QUARTER;\n  }\n  if (x3 === 0) {\n    return Effectiveness.ZERO;\n  }\n  throw new Error();\n}\n\nexport class Matchup {\n  constructor(public type: Type, public effectiveness: Effectiveness) {}\n}\n\nexport class GroupedMatchups {\n  constructor(public matchups: Matchup[]) {}\n\n  typesFor(effectivenes: Effectiveness): Type[] {\n    return this.matchups\n      .filter((m) => m.effectiveness === effectivenes)\n      .map((m) => m.type);\n  }\n}\n\nexport function offensiveMatchups(offenseTypes: Type[]) {\n  const matchups = types.map((t) => {\n    if (offenseTypes.length === 0) {\n      return new Matchup(t, Effectiveness.REGULAR);\n    }\n    const effs = offenseTypes.map((offense) => {\n      return matchupFor(t, Type.NONE, offense);\n    });\n    const max = Math.max(...effs);\n    return new Matchup(t, max);\n  });\n  return new GroupedMatchups(matchups);\n}\n\nexport function defensiveMatchups(t1: Type, t2: Type) {\n  const matchups = types.map((t) => {\n    const eff = matchupFor(t1, t2, t);\n    return new Matchup(t, eff);\n  });\n  return new GroupedMatchups(matchups);\n}\n","import * as React from \"react\";\n\nexport interface PercentBarProps {\n  value: number;\n  max: number;\n}\n\nexport function PercentBar({ value, max }: PercentBarProps) {\n  return (\n    <div className=\"flex h1 w-100 Bar-Container\">\n      <div\n        style={{\n          width: (value / max) * 100 + \"%\",\n          background: \"var(--color-fg3)\",\n        }}\n        className=\"Bar-Fill\"\n      ></div>\n    </div>\n  );\n}\n\n","import * as React from \"react\";\nimport { CoverageType, Effectiveness, matchupFor, Type } from \"./data\";\nimport { PercentBar } from \"./PercentBar\";\n\ninterface DexCoverageProps {\n  coverageTypes: CoverageType[];\n  types: Type[];\n  isLoading: boolean;\n}\n\nconst DexCoverage: React.FC<DexCoverageProps> = ({\n  coverageTypes,\n  types,\n  isLoading,\n}) => {\n  const count = coverageTypes.filter(({ type1, type2 }) => {\n    const matchups = types.map((t) => matchupFor(type1, type2, t));\n    return matchups.some((effectiveness) => {\n      return effectiveness > Effectiveness.REGULAR;\n    });\n  }).length;\n  const total = coverageTypes.length;\n  const ratio = count / total || 0;\n  const percent = (ratio * 100).toFixed(0);\n  return (\n    <div className=\"pt1 tabular-nums flex flex-column lh-copy\">\n      <PercentBar value={count} max={total} />\n      <div className=\"flex items-center\">\n        {isLoading ? (\n          <div className=\"flex-auto tc\">Loading...</div>\n        ) : (\n          <>\n            <div className=\"tl mr2 w3\">{percent}%</div>\n            <div className=\"flex-auto tr\">\n              {count} / {total} forms\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\n\nexport default DexCoverage;\n","import { Type } from \"./data\";\n\nexport function cssType(type: Type): string {\n  switch (type) {\n    case Type.FIRE:\n      return \"type-fire\";\n    case Type.WATER:\n      return \"type-water\";\n    case Type.GRASS:\n      return \"type-grass\";\n    case Type.ELECTRIC:\n      return \"type-electric\";\n    case Type.PSYCHIC:\n      return \"type-psychic\";\n    case Type.ICE:\n      return \"type-ice\";\n    case Type.DRAGON:\n      return \"type-dragon\";\n    case Type.DARK:\n      return \"type-dark\";\n    case Type.FAIRY:\n      return \"type-fairy\";\n    case Type.NORMAL:\n      return \"type-normal\";\n    case Type.FIGHTING:\n      return \"type-fighting\";\n    case Type.FLYING:\n      return \"type-flying\";\n    case Type.POISON:\n      return \"type-poison\";\n    case Type.GROUND:\n      return \"type-ground\";\n    case Type.ROCK:\n      return \"type-rock\";\n    case Type.BUG:\n      return \"type-bug\";\n    case Type.GHOST:\n      return \"type-ghost\";\n    case Type.STEEL:\n      return \"type-steel\";\n    case Type.NONE:\n      return \"type-none\";\n    default:\n      throw new Error(`unknown type ${type}`);\n  }\n}\n","import classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  CoverageType,\n  defensiveMatchups,\n  Effectiveness,\n  GroupedMatchups,\n  offensiveMatchups,\n  Type,\n} from \"./data\";\nimport DexCoverage from \"./DexCoverage\";\nimport { cssType } from \"./cssType\";\n\ninterface BadgeProps {\n  type: Type;\n}\n\nfunction Badge({ type }: BadgeProps) {\n  return (\n    <div\n      className={classNames(\n        \"type-bg-dark\",\n        cssType(type),\n        \"ba border-vibrant\",\n        \"br2\",\n        \"ttc tc b f5 lh-title\"\n      )}\n      style={{ width: 80, margin: \"0.125rem\", padding: 2 }}\n    >\n      <div className=\"bg-black-40 br1 ba b--black-10 white\">{type}</div>\n    </div>\n  );\n}\n\ninterface SectionProps {\n  title: string;\n  types: Type[];\n}\n\nfunction Section({ title, types }: SectionProps) {\n  if (types.length === 0) {\n    return null;\n  }\n  return (\n    <div>\n      <h3 className=\"f5 mt3 mb0\">{title}</h3>\n      <div className=\"mw5 center MatchupsSection-Container\">\n        {types.map((t) => (\n          <Badge key={`type-${t}`} type={t} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\ninterface MatchupsProps {\n  coverageTypes?: CoverageType[];\n  kind: \"offense\" | \"defense\";\n  types: Type[];\n  formatTitle: (value: string) => string;\n  matchups: GroupedMatchups;\n  fallbackCoverageTypes: CoverageType[];\n  isLoading: boolean;\n}\n\nfunction Matchups({\n  coverageTypes,\n  kind,\n  types,\n  formatTitle,\n  matchups,\n  fallbackCoverageTypes,\n  isLoading,\n}: MatchupsProps) {\n  return (\n    <div className=\"tc pt2\" id={`matchup-${kind}`}>\n      {kind === \"offense\" ? (\n        <div>\n          <h3 className=\"f5 mt3 mb0\">\n            Weakness Coverage{\" \"}\n            <span className=\"normal\">\n              (\n              <Link\n                to=\"/offense/coverage/\"\n                className=\"underline fg-link OutlineFocus\"\n              >\n                edit\n              </Link>\n              )\n            </span>\n          </h3>\n          <div\n            className={classNames(\n              \"pt1 mw5 center tc\",\n              isLoading && [\"o-30 no-pointer cursor-na\"]\n            )}\n          >\n            <DexCoverage\n              coverageTypes={coverageTypes ?? fallbackCoverageTypes}\n              types={types}\n              isLoading={isLoading}\n            />\n          </div>\n        </div>\n      ) : null}\n      <Section\n        title={formatTitle(\"4×\")}\n        types={matchups.typesFor(Effectiveness.QUADRUPLE)}\n      />\n      <Section\n        title={formatTitle(\"2×\")}\n        types={matchups.typesFor(Effectiveness.DOUBLE)}\n      />\n      <Section\n        title={formatTitle(\"1×\")}\n        types={matchups.typesFor(Effectiveness.REGULAR)}\n      />\n      <Section\n        title={formatTitle(\"½×\")}\n        types={matchups.typesFor(Effectiveness.HALF)}\n      />\n      <Section\n        title={formatTitle(\"¼×\")}\n        types={matchups.typesFor(Effectiveness.QUARTER)}\n      />\n      <Section\n        title={formatTitle(\"0×\")}\n        types={matchups.typesFor(Effectiveness.ZERO)}\n      />\n    </div>\n  );\n}\n\nexport interface DefenseProps {\n  type1: Type;\n  type2: Type;\n  fallbackCoverageTypes: CoverageType[];\n}\n\nexport function Defense({ type1, type2, fallbackCoverageTypes }: DefenseProps) {\n  return (\n    <Matchups\n      kind=\"defense\"\n      types={[type1, type2]}\n      formatTitle={(x) => `Takes ${x} From`}\n      matchups={defensiveMatchups(type1, type2)}\n      fallbackCoverageTypes={fallbackCoverageTypes}\n      isLoading={false}\n    />\n  );\n}\n\nexport interface OffenseProps {\n  coverageTypes?: CoverageType[];\n  setCoverageTypes: (types: CoverageType[]) => void;\n  types: Type[];\n  fallbackCoverageTypes: CoverageType[];\n  isLoading: boolean;\n}\n\nexport function Offense({\n  coverageTypes,\n  types,\n  fallbackCoverageTypes,\n  isLoading,\n}: OffenseProps) {\n  return (\n    <Matchups\n      kind=\"offense\"\n      types={types}\n      coverageTypes={coverageTypes}\n      formatTitle={(x) => `Deals ${x} to`}\n      matchups={offensiveMatchups(types)}\n      fallbackCoverageTypes={fallbackCoverageTypes}\n      isLoading={isLoading}\n    />\n  );\n}\n","import classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Type, types, typesOrNone } from \"./data\";\nimport { cssType } from \"./cssType\";\n\nconst buttonInnerHeight = \"1.5rem\";\n\ninterface TypeSelectorProps {\n  onChange(type: Type): void;\n  value: Type;\n  includeNone: boolean;\n  disabledTypes: Type[];\n}\n\nexport default function TypeSelector({\n  onChange,\n  value,\n  includeNone,\n  disabledTypes,\n}: TypeSelectorProps) {\n  const theTypes = includeNone ? typesOrNone : types;\n  const styles = {\n    disabled: \"border3 fg4 bg2 o-60 SimpleFocus\",\n    selected: \"border-vibrant2 type-bg-dark SelectedFocus\",\n    normal: \"border1 bg1 fg1 button-bg button-shadow SimpleFocus\",\n  };\n  return (\n    <div className=\"TypeSelector-Container\">\n      {theTypes.map((type) => {\n        const isDisabled = disabledTypes.includes(type);\n        const isSelected = type === value;\n        const style = isDisabled\n          ? styles.disabled\n          : isSelected\n          ? styles.selected\n          : styles.normal;\n        return (\n          <button\n            key={`type-${type}`}\n            disabled={isDisabled}\n            className={classNames(\n              style,\n              \"db w-100\",\n              \"ba br-pill\",\n              \"pv1 ph2\",\n              \"f5 b\",\n              \"ttc\",\n              \"active-squish\",\n              cssType(type)\n            )}\n            onClick={() => onChange(type)}\n          >\n            <span className=\"flex flex-row items-center justify-center\">\n              <span\n                className={classNames(\n                  cssType(type),\n                  `b--black br-pill ba`,\n                  type === value\n                    ? \"b--black type-bg-light\"\n                    : \"border-vibrant type-bg-dark\"\n                )}\n                style={{\n                  width: \"1rem\",\n                  height: \"1rem\",\n                }}\n              />\n              <span\n                className=\"tl pl2 pr1 flex-auto truncate\"\n                style={{ lineHeight: buttonInnerHeight }}\n              >\n                {type}\n              </span>\n              {isSelected ? (\n                <small aria-label=\"\"> &#9679;&nbsp;</small>\n              ) : (\n                <small />\n              )}\n            </span>\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n","import { useLocation } from \"react-router-dom\";\n\nexport function useSearch() {\n  const location = useLocation();\n  return new URLSearchParams(location.search);\n}\n","import * as React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CoverageType, Type, typesFromString } from \"./data\";\nimport * as Matchups from \"./Matchups\";\nimport TypeSelector from \"./TypeSelector\";\nimport { useScrollToFragment } from \"./useScrollToFragment\";\nimport { useSearch } from \"./useSearch\";\n\ninterface DefenseProps {\n  setDefenseParams: (params: string) => void;\n  fallbackCoverageTypes: CoverageType[];\n}\n\nexport default function ScreenDefense({\n  setDefenseParams,\n  fallbackCoverageTypes,\n}: DefenseProps) {\n  useScrollToFragment();\n\n  const search = useSearch();\n  const history = useHistory();\n\n  const [type1 = Type.NORMAL, type2 = Type.NONE] = typesFromString(\n    search.get(\"types\") || \"\"\n  );\n\n  function createParams(types: Type[]): string {\n    const params = new URLSearchParams();\n    if (types.length >= 0) {\n      if (types[1] === Type.NONE) {\n        params.set(\"types\", types[0]);\n      } else {\n        params.set(\"types\", types.join(\" \"));\n      }\n    }\n    return \"?\" + params;\n  }\n\n  function updateTypes(types: Type[]) {\n    history.replace({ search: createParams(types) });\n  }\n\n  function updateType1(t: Type) {\n    updateTypes([t, type2]);\n  }\n\n  function updateType2(t: Type) {\n    updateTypes([type1, t]);\n  }\n\n  const params = createParams([type1, type2]);\n  React.useEffect(() => {\n    setDefenseParams(params);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params]);\n\n  const classH2 = \"tc f5 mv3\";\n  return (\n    <main className=\"ph3 pt1 pb4 content-wide center\">\n      <div className=\"dib w-50-ns w-100 v-top\">\n        <h2 className={classH2}>Choose Primary Type</h2>\n        <TypeSelector\n          value={type1}\n          onChange={updateType1}\n          disabledTypes={[]}\n          includeNone={false}\n        />\n        <h2 className={`${classH2} mt4`}>Choose Secondary Type</h2>\n        <TypeSelector\n          value={type2}\n          onChange={updateType2}\n          disabledTypes={[type1]}\n          includeNone={true}\n        />\n      </div>\n      <div className=\"dib w-50-ns w-100 v-top pl3-ns\">\n        <hr className=\"dn-ns subtle-hr mv4\" />\n        <Matchups.Defense\n          type1={type1}\n          type2={type2}\n          fallbackCoverageTypes={fallbackCoverageTypes}\n        />\n      </div>\n    </main>\n  );\n}\n\n","import * as React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport function useScrollToFragment() {\n  const fragment = useLocation().hash.slice(1);\n\n  React.useLayoutEffect(() => {\n    if (!fragment) {\n      return;\n    }\n    const element = document.getElementById(fragment);\n    if (element instanceof HTMLElement) {\n      element.scrollIntoView();\n    }\n  }, [fragment]);\n}\n","import classNames from \"classnames\";\nimport * as React from \"react\";\n\ninterface SelectProps\n  extends Omit<React.SelectHTMLAttributes<HTMLSelectElement>, \"className\"> {\n  label: string;\n  helpText?: string;\n}\n\nexport function Select({\n  label,\n  \"aria-label\": ariaLabel = label,\n  helpText,\n  ...props\n}: SelectProps) {\n  return (\n    <div>\n      {label && <div className=\"pb1\">{label}</div>}\n      <div className=\"Select\">\n        <select {...props} aria-label={ariaLabel} className={baseClasses} />\n      </div>\n      {helpText && <p className=\"ma0 pt1 fg3 f6\">{helpText}</p>}\n    </div>\n  );\n}\n\nconst baseClasses = classNames(\n  \"db w-100\",\n  \"no-underline\",\n  \"ba br2 pa2 pr4\",\n  \"b f5\",\n  \"SimpleFocus\",\n  \"border1 button-shadow button-bg button-bg-hover color-inherit\"\n);\n","import * as React from \"react\";\nimport { useLocalStorage } from \"usehooks-ts\";\n\nexport function useTheme(): [\n  string,\n  React.Dispatch<React.SetStateAction<string>>\n] {\n  const [theme, setTheme] = useLocalStorage(\"theme\", \"auto\");\n  return [theme, setTheme];\n}\n","import * as React from \"react\";\nimport { Button } from \"./Button\";\nimport { Select } from \"./Select\";\nimport { useLanguage } from \"./useLanguage\";\nimport { useTheme } from \"./useTheme\";\n\nconst year = new Date().getFullYear();\n\nasync function unregisterServiceWorker() {\n  try {\n    for (const reg of await navigator.serviceWorker.getRegistrations()) {\n      try {\n        await reg.unregister();\n      } catch (err) {\n        console.warn(\"Failed to unregister service worker\", err);\n      }\n    }\n  } finally {\n    location.reload();\n  }\n}\n\ninterface Language {\n  title: string;\n  value: string;\n}\n\nconst languages: Language[] = [\n  { title: \"English\", value: \"en\" },\n  { title: \"Japanese\", value: \"ja\" },\n  { title: \"Japanese (Hiragana/Katakana)\", value: \"ja-Hrkt\" },\n  { title: \"Chinese (Simplified)\", value: \"zh-Hans\" },\n  { title: \"Chinese (Traditional)\", value: \"zh-Hant\" },\n  { title: \"French\", value: \"fr\" },\n  { title: \"German\", value: \"de\" },\n  { title: \"Italian\", value: \"it\" },\n  { title: \"Korean\", value: \"ko\" },\n  { title: \"Spanish\", value: \"es\" },\n];\n\ninterface Theme {\n  title: string;\n  value: string;\n}\n\nconst themes: Theme[] = [\n  { title: \"Auto\", value: \"auto\" },\n  { title: \"Light\", value: \"light\" },\n  { title: \"Dark\", value: \"dark\" },\n];\n\nexport default function ScreenMore(): JSX.Element {\n  const [language, setLanguage] = useLanguage();\n  const [theme, setTheme] = useTheme();\n  return (\n    <main className=\"pa3 center content-narrow lh-copy\">\n      <h2 className=\"lh-title f4\">Contact Me</h2>\n      <p>\n        Questions, suggestions, or just want to say thank you? Email me at{\" \"}\n        <a\n          className=\"underline fg-link OutlineFocus\"\n          href=\"mailto:brian@wavebeem.com\"\n        >\n          brian@wavebeem.com\n        </a>\n        . Source code is available on{\" \"}\n        <a\n          href=\"https://github.com/wavebeem/pkmn.help\"\n          className=\"underline fg-link OutlineFocus\"\n        >\n          GitHub\n        </a>\n        .\n      </p>\n      <div role=\"presentation\" className=\"mv2 bt border3\" />\n      <h2 className=\"lh-title f4\">Settings</h2>\n      <div className=\"grid gap3 pb2\">\n        <Select\n          label=\"Language\"\n          value={language}\n          helpText=\"Language support is incomplete. Only Pokémon names are translated.\"\n          onChange={(event) => {\n            setLanguage(event.target.value);\n          }}\n        >\n          {languages.map((lang) => {\n            return (\n              <option key={lang.value} value={lang.value}>\n                {lang.title}\n              </option>\n            );\n          })}\n        </Select>\n        <Select\n          label=\"Theme\"\n          value={theme}\n          onChange={(event) => {\n            setTheme(event.target.value);\n          }}\n        >\n          {themes.map((theme) => {\n            return (\n              <option key={theme.value} value={theme.value}>\n                {theme.title}\n              </option>\n            );\n          })}\n        </Select>\n      </div>\n      <div role=\"presentation\" className=\"mv2 bt border3\" />\n      <h2 className=\"lh-title f4\">Help</h2>\n      <p>This button can help fix issues in the app.</p>\n      <div className=\"mv3\">\n        <Button onClick={unregisterServiceWorker}>\n          Unregister service worker\n        </Button>\n      </div>\n      <div role=\"presentation\" className=\"mv2 bt border3\" />\n      <h2 className=\"lh-title f4\">Privacy</h2>\n      <p>\n        I will never runs ads or steal your personal data. I use{\" \"}\n        <a\n          href=\"https://plausible.io/privacy\"\n          className=\"underline fg-link OutlineFocus\"\n        >\n          Plausible Analytics\n        </a>\n        , which is self-funded, independent, hosted in the EU, and doesn&apos;t\n        store any cookies on your computer.\n      </p>\n      <div role=\"presentation\" className=\"mv2 bt border3\" />\n      <h2 className=\"lh-title f4\">Giving Back</h2>\n      <p>\n        I have spent countless hours improving this site. If you appreciate what\n        I&apos;ve made, please consider donating to charities that support BIPOC\n        and transgender rights.\n      </p>\n      <div role=\"presentation\" className=\"mv2 bt border3\" />\n      <h2 className=\"lh-title f4\">Special Thanks</h2>\n      <ul className=\"lh-copy mt1 ph3\">\n        <li>Jansjo (testing, research)</li>\n        <li>Several anonymous Poké Fans</li>\n      </ul>\n      <div role=\"presentation\" className=\"mv2 bt border3\" />\n      <h2 className=\"lh-title f4\">Legal Info</h2>\n      <p>\n        Pokémon &copy; 2002&ndash;{year} Pokémon. &copy; 1995&ndash;{year}{\" \"}\n        Nintendo/Creatures Inc./GAME FREAK inc. &trade;, &reg; and Pokémon\n        character names are trademarks of Nintendo.\n      </p>\n      <p>\n        No copyright or trademark infringement is intended in using Pokémon\n        content on this page.\n      </p>\n      <p>\n        Pokédex data from{\" \"}\n        <a\n          className=\"underline fg-link OutlineFocus\"\n          href=\"https://pokeapi.co/\"\n        >\n          PokéAPI\n        </a>\n        .\n      </p>\n      <p>\n        pkmn.help &copy; 2013&ndash;{year}{\" \"}\n        <a\n          href=\"https://www.wavebeem.com\"\n          className=\"underline fg-link OutlineFocus\"\n        >\n          Brian Mock\n        </a>\n        .\n      </p>\n    </main>\n  );\n}\n","import * as React from \"react\";\nimport { useLocalStorage } from \"usehooks-ts\";\n\nexport function useLanguage(): [\n  string,\n  React.Dispatch<React.SetStateAction<string>>\n] {\n  const [language, setLanguage] = useLocalStorage(\"language\", \"en\");\n  return [language, setLanguage];\n}\n","import classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Type, types } from \"./data\";\nimport { cssType } from \"./cssType\";\n\nconst buttonInnerHeight = \"1.5rem\";\n\ninterface TypeSelectorProps {\n  onChange(types: Type[]): void;\n  value: Type[];\n}\n\nexport default function MultiTypeSelector({\n  onChange,\n  value,\n}: TypeSelectorProps) {\n  const styles = {\n    selected:\n      \"border-vibrant2 type-bg-dark no-box-shadow button-shadow SelectedFocus\",\n    normal: \"border1 bg1 fg1 button-bg button-shadow SimpleFocus\",\n  };\n  return (\n    <div className=\"MultiTypeSelector-Container\">\n      {types.map((type) => {\n        const isChecked = value.includes(type);\n        const style = isChecked ? styles.selected : styles.normal;\n        return (\n          <button\n            role=\"checkbox\"\n            aria-checked={isChecked ? \"true\" : \"false\"}\n            key={`type-${type}`}\n            className={classNames(\n              style,\n              \"db w-100\",\n              \"ba br1\",\n              \"pv1 ph2\",\n              \"f5 b\",\n              \"ttc\",\n              \"SimpleFocus\",\n              \"active-squish\",\n              cssType(type)\n            )}\n            onClick={() => {\n              const types = new Set(value);\n              if (isChecked) {\n                types.delete(type);\n              } else {\n                types.add(type);\n              }\n              // Should we sort based on the type order on the page rather than\n              // alphabetical? I'll just stick with alphabetical for now.\n              onChange([...types].sort());\n            }}\n          >\n            <span className=\"flex flex-row items-center justify-center\">\n              <span\n                className={classNames(\n                  `type-${type} ba br1`,\n                  isChecked\n                    ? \"b--black type-bg-light\"\n                    : \"border-vibrant type-bg-dark\"\n                )}\n                style={{\n                  width: \"1rem\",\n                  height: \"1rem\",\n                }}\n              />\n\n              <span\n                className=\"tl pl2 pr1 flex-auto truncate\"\n                style={{ lineHeight: buttonInnerHeight }}\n              >\n                {type}\n              </span>\n              {isChecked ? <span aria-label=\"\"> &#10003;</span> : <span />}\n            </span>\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { CoverageType, Type, typesFromString } from \"./data\";\nimport * as Matchups from \"./Matchups\";\nimport MultiTypeSelector from \"./MultiTypeSelector\";\nimport { useSearch } from \"./useSearch\";\n\ninterface OffenseProps {\n  coverageTypes?: CoverageType[];\n  setCoverageTypes: (types: CoverageType[]) => void;\n  setOffenseParams: (params: string) => void;\n  fallbackCoverageTypes: CoverageType[];\n  isLoading: boolean;\n}\n\nexport default function ScreenOffense({\n  coverageTypes,\n  setCoverageTypes,\n  setOffenseParams,\n  fallbackCoverageTypes,\n  isLoading,\n}: OffenseProps) {\n  const search = useSearch();\n  const history = useHistory();\n  const offenseTypes = typesFromString(search.get(\"types\") || \"\");\n\n  function createParams(types: Type[]): string {\n    const params = new URLSearchParams();\n    if (types.length > 0) {\n      params.set(\"types\", types.join(\" \"));\n    }\n    return \"?\" + params;\n  }\n\n  const updateOffenseTypes = (types: Type[]) => {\n    history.replace({ search: createParams(types) });\n  };\n\n  const params = createParams(offenseTypes);\n  React.useEffect(() => {\n    setOffenseParams(params);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params]);\n\n  const classH2 = \"tc f5 mv3\";\n  return (\n    <main className=\"ph3 pt1 pb4 content-wide center\">\n      <div className=\"dib w-50-ns w-100 v-top\">\n        <h2 className={classH2}>Choose Types</h2>\n        <MultiTypeSelector value={offenseTypes} onChange={updateOffenseTypes} />\n      </div>\n      <div className=\"dib w-50-ns w-100 v-top pl3-ns\">\n        <hr className=\"dn-ns subtle-hr mv4\" />\n        <Matchups.Offense\n          coverageTypes={coverageTypes}\n          setCoverageTypes={setCoverageTypes}\n          types={offenseTypes}\n          fallbackCoverageTypes={fallbackCoverageTypes}\n          isLoading={isLoading}\n        />\n      </div>\n    </main>\n  );\n}\n\n","// Documentation for import.meta.env variables\r\n// https://vitejs.dev/guide/env-and-mode.html\r\n\r\nexport const PUBLIC_PATH = new URL(\r\n  import.meta.env.BASE_URL,\r\n  window.location.href\r\n).href;\r\n","// https://niantic.helpshift.com/a/pokemon-go/?s=finding-evolving-hatching&f=weather-boosts&l=en&p=web\n\nconst weatherBoosted: { [key: string]: any } = {\n  normal: 'Partly cloudy',\n  fighting: 'Cloudy',\n  flying: 'Windy',\n  poison: 'Cloudy',\n  ground: 'Sunny/Clear',\n  rock: 'Partly cloudy',\n  bug: 'Rainy',\n  ghost: 'Fog',\n  steel: 'Snow',\n  fire: 'Sunny/Clear',\n  water: 'Rainy',\n  grass: 'Sunny/Clear',\n  electric: 'Rainy',\n  psychic: 'Windy',\n  ice: 'Snow',\n  dragon: 'Windy',\n  dark: 'Fog',\n  fairy: 'Cloudy',\n  none: '',\n}\n\nexport function getWeatherBoosted(type: string): string {\n  return weatherBoosted[type] || weatherBoosted.none;\n}\n","import classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Link, LinkProps } from \"react-router-dom\";\n\ninterface LinkButtonProps extends LinkProps {\n  disabled?: boolean;\n}\n\nexport function LinkButton({\n  disabled = false,\n  to,\n  className,\n  ...props\n}: LinkButtonProps) {\n  if (disabled) {\n    // React Router <Link> requires the `to` prop, but rendering an <a> without\n    // an `href` works better for \"disabling\" a link\n    return (\n      <a\n        {...props}\n        className={classNames(\n          className,\n          baseClasses,\n          \"border3 fg4 bg-transparent no-pointer\"\n        )}\n      />\n    );\n  }\n  return (\n    <Link\n      {...props}\n      to={to}\n      tabIndex={0}\n      onClick={props.onClick}\n      className={classNames(\n        className,\n        baseClasses,\n        \"border1 button-shadow button-bg button-bg-hover color-inherit active-squish\"\n      )}\n    />\n  );\n}\n\nconst baseClasses = classNames(\n  \"no-underline\",\n  \"db\",\n  \"pv1 ph2 pv2-ns ph3-ns\",\n  \"ba br2\",\n  \"b f5\",\n  \"SimpleFocus\"\n);\n","import classNames from \"classnames\";\nimport * as React from \"react\";\nimport { LinkButton } from \"./LinkButton\";\n\nenum Location {\n  TOP = \"top\",\n  BOTTOM = \"bottom\",\n}\n\ninterface PageSelectorProps {\n  numPages: number;\n  pageItems: any[];\n  location: Location;\n  currentPage: number;\n  urlForPage: (page: number) => string;\n  hasPrev: boolean;\n  hasNext: boolean;\n}\n\nfunction PageSelector({\n  numPages,\n  pageItems,\n  location,\n  currentPage,\n  urlForPage,\n  hasPrev,\n  hasNext,\n}: PageSelectorProps) {\n  // Attempt to stay anchored to the top or bottom of the page when using\n  // pagination buttons to avoid the screen jumping around and stuff\n  const [scrollTo, setScrollTo] = React.useState<Location | undefined>(\n    undefined\n  );\n\n  React.useLayoutEffect(() => {\n    if (scrollTo === Location.TOP) {\n      window.scrollTo(0, 0);\n    } else if (scrollTo === Location.BOTTOM) {\n      window.scrollTo(0, document.body.scrollHeight);\n    }\n    setScrollTo(undefined);\n  }, [scrollTo]);\n\n  return (\n    <div\n      className={classNames(\n        \"items-center mv3\",\n        pageItems.length === 0 ? \"dn\" : \"flex\"\n      )}\n    >\n      <LinkButton\n        onClick={() => {\n          setScrollTo(location);\n        }}\n        disabled={!hasPrev}\n        to={urlForPage(0)}\n        aria-label=\"First\"\n      >\n        &laquo;\n      </LinkButton>\n      <div className=\"pr1\" />\n      <LinkButton\n        onClick={() => {\n          setScrollTo(location);\n        }}\n        disabled={!hasPrev}\n        to={urlForPage(currentPage - 1)}\n        aria-label=\"Previous\"\n      >\n        <span role=\"presentation\">&lsaquo; </span>Prev\n      </LinkButton>\n      <div className=\"flex-auto tc b f5 tabular-nums\">\n        {(currentPage + 1).toString().padStart(numPages.toString().length, \"0\")}\n        {\" / \"}\n        {numPages}\n      </div>\n      <LinkButton\n        onClick={() => {\n          setScrollTo(location);\n        }}\n        disabled={!hasNext}\n        to={urlForPage(currentPage + 1)}\n        aria-label=\"Next\"\n      >\n        Next<span role=\"presentation\"> &rsaquo;</span>\n      </LinkButton>\n      <div className=\"pr1\" />\n      <LinkButton\n        onClick={() => {\n          setScrollTo(location);\n        }}\n        disabled={!hasNext}\n        to={urlForPage(numPages - 1)}\n        aria-label=\"Last\"\n      >\n        &raquo;\n      </LinkButton>\n    </div>\n  );\n}\n\ninterface PaginatorProps<T> {\n  urlForPage: (page: number) => string;\n  currentPage: number;\n  pageSize: number;\n  emptyState: any;\n  items: T[];\n  renderPage: (items: T[]) => any;\n}\n\nexport default function Paginator<T>({\n  urlForPage,\n  currentPage,\n  pageSize,\n  emptyState,\n  items,\n  renderPage,\n}: PaginatorProps<T>) {\n  const numPages = Math.ceil(items.length / pageSize);\n  const hasPrev = currentPage > 0;\n  const hasNext = currentPage < numPages - 1;\n  const i = pageSize * currentPage;\n  const pageItems = items.slice(i, i + pageSize);\n  return (\n    <div>\n      <PageSelector\n        location={Location.TOP}\n        numPages={numPages}\n        pageItems={pageItems}\n        hasPrev={hasPrev}\n        hasNext={hasNext}\n        currentPage={currentPage}\n        urlForPage={urlForPage}\n      />\n      {pageItems.length === 0 ? emptyState : renderPage(pageItems)}\n      <PageSelector\n        location={Location.BOTTOM}\n        numPages={numPages}\n        pageItems={pageItems}\n        hasPrev={hasPrev}\n        hasNext={hasNext}\n        currentPage={currentPage}\n        urlForPage={urlForPage}\n      />\n    </div>\n  );\n}\n","export function pickTranslation(obj: Record<string, string>): string {\n  // Browsers typically only include a region code after the language, but\n  // PokéAPI tells us the script instead. Map the region codes to script codes\n  // for Simplified vs Traditional Chinese\n  const languages = navigator.languages\n    .map((s) => s.toLowerCase())\n    .map((s) => {\n      if (s === \"zh-tw\" || s === \"zh-hk\" || s === \"zh-mo\") {\n        return \"zh-Hant\";\n      }\n      if (s === \"zh-cn\" || s === \"zh-sg\") {\n        return \"zh-Hans\";\n      }\n      // Remove the region code because we don't support it for other languages\n      return s.split(\"-\")[0];\n    });\n  for (const lang of languages) {\n    if (lang in obj) {\n      return obj[lang];\n    }\n  }\n  return obj.en;\n}\n","import * as React from \"react\";\n\nexport function IconSearch(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M16,10c-.41,7.68-12,7.75-12,0s11.59-7.69,12,0c.1,1.92,3.1,1.93,3,0-.26-4.88-3.91-9-9-9a9.1,9.1,0,0,0-9,9,9.08,9.08,0,0,0,8.59,9c5.25.23,9.14-3.93,9.41-9C19.1,8.07,16.1,8.08,16,10Z\" />\n      <path d=\"M14.44,16.56l5,5a1.5,1.5,0,0,0,2.12-2.12l-5-5a1.5,1.5,0,0,0-2.12,2.12Z\" />\n    </svg>\n  );\n}\n","import * as React from \"react\";\n\nexport function IconClear(props: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M12,1A11,11,0,1,0,23,12,11,11,0,0,0,12,1Zm2.94,16.56L12,14.25,9.06,17.56c-1.28,1.45-3.4-.68-2.12-2.12L10,12,6.94,8.56C5.66,7.12,7.78,5,9.06,6.44L12,9.75l2.94-3.31c1.28-1.45,3.4.68,2.12,2.12L14,12l3.06,3.44C18.34,16.88,16.23,19,14.94,17.56Z\" />\n    </svg>\n  );\n}\n","import classNames from \"classnames\";\nimport * as React from \"react\";\nimport { IconSearch } from \"./IconSearch\";\nimport { IconClear } from \"./IconClear\";\n\ninterface SearchProps {\n  updateSearch: (search: string) => void;\n  search: string;\n}\n\nexport default function Search({ updateSearch, search }: SearchProps) {\n  const ref = React.useRef<HTMLInputElement>(null);\n  const iconSize = 24;\n  const inputHeight = 36;\n  return (\n    <div className=\"relative mv3\">\n      <IconSearch\n        width={iconSize}\n        height={iconSize}\n        role=\"presentation\"\n        className=\"absolute fg3 fill-currentColor\"\n        style={{ left: 10, top: 8 }}\n      />\n      <input\n        aria-label=\"Search by name, number, or types\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        inputMode=\"search\"\n        autoCapitalize=\"none\"\n        className={classNames(\n          \"f5 w-100 border-box\",\n          \"pv2\",\n          \"SimpleFocus\",\n          \"inset-shadow\",\n          \"br-pill ba\",\n          \"bg1\",\n          \"fg1\",\n          \"border1\"\n        )}\n        style={{ paddingLeft: 40, paddingRight: 40, height: inputHeight }}\n        value={search}\n        onChange={(event) => {\n          updateSearch(event.target.value);\n        }}\n        ref={ref}\n      />\n      <IconClear\n        width={iconSize}\n        height={iconSize}\n        role=\"presentation\"\n        onClick={() => {\n          updateSearch(\"\");\n          if (ref.current) {\n            ref.current.focus();\n          }\n        }}\n        className={classNames(\"absolute fg3 fill-currentColor\", {\n          dn: search === \"\",\n        })}\n        style={{ right: 6, top: 6 }}\n      />\n    </div>\n  );\n}\n","import classnames from \"classnames\";\nimport matchSorter from \"match-sorter\";\nimport * as React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Pokemon, Type, typesOrNoneFromString } from \"./data\";\nimport { getImage } from \"./getImage\";\nimport { getWeatherBoosted } from \"./getWeatherBoosted\";\nimport Paginator from \"./Paginator\";\nimport { pickTranslation } from \"./pickTranslation\";\nimport Search from \"./Search\";\n// import StatsTable from \"./StatsTable\";\nimport { useSearch } from \"./useSearch\";\nimport { useDebounce } from \"use-debounce\";\nimport { cssType } from \"./cssType\";\n\nimport DataPvpGL from \"./data-pvp-gl.json\";\nimport DataPvpUL from \"./data-pvp-ul.json\"\nimport DataEvolutions from \"./data-evolutions.json\";\nimport DataBuddyCandies from \"./data-buddy-distances.json\";\n\n\nconst PAGE_SIZE = 20;\nconst nbsp = \"\\u00a0\";\n\ninterface MonsterTypeProps {\n  type: Type;\n  index: number;\n}\n\nfunction MonsterType({ type, index }: MonsterTypeProps) {\n  return (\n    <div\n      className={classnames(\n        cssType(type),\n        `type-bg-dark`,\n        \"ttc tc flex\",\n        \"pv0 ph2 lh-copy b\",\n        \"br-pill ba border3 f6\",\n        { ml1: index > 0 }\n      )}\n    >\n      {type}\n    </div>\n  );\n}\n\n\nfunction WeatherBoosted({ type, index }: MonsterTypeProps) {\n  return (\n    <div\n      className={classnames(\n        `type-${getWeatherBoosted(type)}`,\n        \"ttc tc flex\",\n        \"pv0 ph2 lh-copy b\",\n        \"br-pill ba border3 f6\",\n        { ml1: index > 0 }\n      )}\n    >\n      {getWeatherBoosted(type)}\n    </div>\n  );\n}\n\nWeatherBoosted.displayName = \"WeatherBoosted\";\n\ninterface MonsterProps {\n  pokemon: Pokemon;\n}\n\n// Find GL or UL best IVs\nfunction findByDex(data: any[], Dex: number) {\n  const el = data.find(el => el.Dex === Dex); // Possibly returns `undefined`\n  if (el) {\n    return (\n      <div className=\"tl ph2\">\n        Level {el.Lvl}\n        <span aria-hidden=\"true\" className=\"o-50\">\n          &nbsp;&bull;&nbsp;\n        </span>\n        CP {el.CP}\n        <span aria-hidden=\"true\" className=\"o-50\">\n          &nbsp;&bull;&nbsp;\n        </span>\n        IV {el.AtkIV}/{el.DefIV}/{el.StaIV}\n      </div>\n    );\n  }\n}\n\n// Find buddy distances to earn a candy by gamepress.gg data\n// Deprecated\n// function findByName(data: any[], Name: string) {\n//   const myName = Name.split('-');\n//   const el = data.find(el => el.title.toLocaleLowerCase().includes(myName[0]));\n//   if (el) {\n//     return (\n//       <div className=\"tl ph2\">\n//         {el.field_buddy_distance_requirement} to earn a candy\n//       </div>\n//     );\n//   }\n// }\n\n// Find buddy distances to earn a candy\n// Data from https://pogoapi.net/api/v1/pokemon_buddy_distances.json\nfunction findByDexToCandy(data: any[], Dex: number) {\n  const el = data.find(el => el.pokemon_id === Dex);\n  if (el) {\n    return el.distance\n  }\n}\n\nfunction findByDexToCandyAll(data: any, Dex: number) {\n  let el = findByDexToCandy(data[1], Dex)\n  if (!el) {\n    el = findByDexToCandy(data[3], Dex)\n  }\n  if (!el) {\n    el = findByDexToCandy(data[5], Dex)\n  }\n  if (!el) {\n    el = findByDexToCandy(data[20], Dex)\n  }\n  if (el) {\n    return (\n      <div className=\"tl ph2\">\n        {el} km to earn a candy\n      </div>\n    );\n  }\n}\n\n\n\n// function findByDexToEvo(data: any[], Dex: number) {\n//   const el = data.find(el => el.pokemon_id === Dex); // Possibly returns `undefined`\n//   if (el) {\n//     return (\n//       <div className=\"tl ph2\">\n//         <Link\n//           className=\"fg-link OutlineFocus\"\n//           style={{ textDecoration: \"none\" }}\n//           to={`/pokedex?q=${el.evolutions[0].pokemon_name}`}\n//         >\n//           {el.evolutions[0].pokemon_name}\n//         </Link> with {el.evolutions[0].candy_required} candies\n//       </div>\n//     );\n//   }\n// }\n\nfunction findByDexToEvolutions(data: any[], Dex: number) {\n  const el = data.find(el => el.pokemon_id === Dex); // Possibly returns `undefined`\n  if (el) {\n    const items = el.evolutions.map(function (name: any) {\n\n      // console.log(name.pokemon_name)\n\n      return (\n        <div className=\"tl ph2\" key={name.pokemon_id}>\n          <Link\n            className=\"fg-link OutlineFocus\"\n            style={{ textDecoration: \"none\" }}\n            to={`/pokedex?q=${name.pokemon_name}`}\n            key={name.pokemon_id}\n          >\n            {name.pokemon_name}</Link>\n          {\" \"} with {name.candy_required} candies\n          {name.item_required ? \" & \" + name.item_required : \"\"}\n          {name.lure_required ? \" & \" + name.lure_required : \"\"}\n          {name.gender_required ? \" & be a \" + name.gender_required : \"\"}\n          {name.must_be_buddy_to_evolve ? \" & must be buddy\" : \"\"}\n          {name.buddy_distance_required ? \" & walked \" + name.buddy_distance_required + \" km\" : \"\"}\n          {name.only_evolves_in_nighttime ? \" & Nighttime\" : \"\"}\n          {name.only_evolves_in_daytime ? \" & Daytime\" : \"\"}\n          {name.no_candy_cost_if_traded ? \" OR trade to evolve with no candy\" : \"\"}\n        </div>\n      );\n    });\n\n    return (\n      <div>\n        {items}\n      </div>\n    );\n  }\n}\n\nfunction findByDexFromEvo(data: any[], Dex: number) {\n  const el = data.find(el => el.evolutions[0].pokemon_id === Dex); // Possibly returns `undefined`\n  if (el) {\n    // console.log(el.evolutions[0].candy_required);\n    return (\n      <div className=\"tl ph2\">\n        <Link\n          className=\"fg-link OutlineFocus\"\n          style={{ textDecoration: \"none\" }}\n          to={`/pokedex?q=${el.pokemon_name}`}\n        >\n          {el.pokemon_name}\n        </Link> by {el.evolutions[0].candy_required} candies\n      </div>\n    );\n  }\n}\n\n\nfunction Monster({ pokemon }: MonsterProps) {\n  const displayNumber = \"#\" + String(pokemon.number).padStart(3, \"0\");\n  const params = new URLSearchParams({ types: pokemon.types.join(\" \") });\n  const speciesName = pickTranslation(pokemon.speciesNames);\n  const formName = pickTranslation(pokemon.formNames);\n  return (\n    <div className={classnames(\"fg1 pv3\", \"flex-ns items-center\", \"Monster\")}>\n      <div className=\"flex flex-column\">\n        <div className=\"flex flex-column pa3 br4 bg1 flex ba border4\">\n          <div className=\"flex items-center\">\n            <h2 className=\"mv0 f4\">{speciesName}</h2>\n            <div className=\"ph1 flex-auto\" />\n            <div className=\"fg3 mv0 tabular-nums f5\">{displayNumber}</div>\n          </div>\n          <div className=\"nv2 fg3 f5\">{formName || nbsp}</div>\n\n          <div className=\"pv3 flex justify-center\">\n            <img\n              src={getImage(pokemon.id)}\n              role=\"presentation\"\n              alt=\"\"\n              className=\"db img-crisp\"\n              width={96}\n              height={96}\n            />\n          </div>\n\n          <div className=\"pt2 flex justify-end\">\n            {pokemon.types.map((t, i) => (\n              <MonsterType key={i} type={t} index={i} />\n            ))}\n          </div>\n          <div className=\"pt2 flex justify-end\">\n            {pokemon.types.map((t, i) => (\n              <WeatherBoosted key={i} type={t} index={i} />\n            ))}\n          </div>\n        </div>\n      </div>\n      <div className=\"flex flex-column\">\n\n        <div className=\"StatsTable tabular-nums\">\n          <div className=\"b tl\">GreatLeague</div>\n          {findByDex(DataPvpGL, pokemon.number)}\n        </div>\n        <div className=\"StatsTable tabular-nums\">\n          <div className=\"b tl\">Ultra  League</div>\n          {findByDex(DataPvpUL, pokemon.number)}\n        </div>\n        <div className=\"StatsTable tabular-nums\">\n          <div className=\"b tl\">Buddy distance</div>\n          {findByDexToCandyAll(DataBuddyCandies, pokemon.number)}\n        </div>\n        <div className=\"StatsTable tabular-nums\">\n          <div className=\"b tl\">Evolutions from:</div>\n          {findByDexFromEvo(DataEvolutions, pokemon.number)}\n        </div>\n        <div className=\"StatsTable tabular-nums\">\n          <div className=\"b tl\">Evolutions to:</div>\n          {findByDexToEvolutions(DataEvolutions, pokemon.number)}\n        </div>\n\n        {/* <StatsTable pokemon={pokemon} /> */}\n\n        <div className=\"flex justify-end\">\n          <Link\n            aria-label={`Defense for ${speciesName} (${formName})`}\n            className=\"underline fg-link OutlineFocus\"\n            to={`/defense?${params}#matchup-defense`}\n          >\n            Defense\n          </Link>\n          <span aria-hidden=\"true\" className=\"o-50\">\n            &nbsp;&bull;&nbsp;\n          </span>\n          <Link\n            aria-label={`Offense for ${speciesName} (${formName})`}\n            className=\"underline fg-link OutlineFocus\"\n            to={`/offense?${params}#matchup-offense`}\n          >\n            Offense\n          </Link>\n          <span aria-hidden=\"true\" className=\"o-50\">\n            &nbsp;&bull;&nbsp;\n          </span>\n          <a\n            aria-label={`Pokémon GO Wiki page for ${speciesName}`}\n            className=\"underline fg-link OutlineFocus\"\n            href={`https://pokemongo.fandom.com/wiki/${pokemon.name}`}\n          >\n            Wiki\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\ninterface DexProps {\n  allPokemon: Pokemon[];\n  setPokedexParams: (params: string) => void;\n  isLoading: boolean;\n}\n\nexport default function ScreenPokedex({\n  allPokemon,\n  setPokedexParams,\n  isLoading,\n}: DexProps) {\n  const search = useSearch();\n  const history = useHistory();\n  const query = search.get(\"q\") || \"\";\n  const [debouncedQuery] = useDebounce(query, 500);\n  const page = Number(search.get(\"page\") || 1) - 1;\n\n  const searchablePkmn = React.useMemo(() => {\n    return allPokemon.map((p) => {\n      return {\n        ...p,\n        speciesName: pickTranslation(p.speciesNames),\n        formName: pickTranslation(p.formNames),\n      };\n    });\n  }, [allPokemon]);\n\n  const pkmn = React.useMemo(() => {\n    const s = debouncedQuery.trim();\n    if (/^[0-9]+$/.test(s)) {\n      const number = Number(s);\n      return searchablePkmn.filter((p) => p.number === number);\n    }\n    const types = typesOrNoneFromString(s);\n    if (types.length > 0) {\n      return searchablePkmn.filter((p) => {\n        if (types.length === 1) {\n          return p.types[0] === types[0] || p.types[1] === types[0];\n        }\n        if (types.length === 2 && types[1] === Type.NONE) {\n          return p.types.length === 1 && p.types[0] === types[0];\n        }\n        return (\n          p.types.slice().sort().join(\" \") === types.slice().sort().join(\" \")\n        );\n      });\n    }\n    return matchSorter(searchablePkmn, s, {\n      keys: [\"speciesName\", \"formName\", \"number\"],\n    });\n  }, [debouncedQuery, searchablePkmn]);\n\n  function createParams(newQuery: string, newPage: number): string {\n    const params = new URLSearchParams();\n    if (newQuery) {\n      params.set(\"q\", newQuery);\n    }\n    if (Number(newPage) > 0) {\n      params.set(\"page\", String(newPage + 1));\n    }\n    return \"?\" + params;\n  }\n\n  function update(newQuery: string, newPage: number) {\n    const params = createParams(newQuery, newPage);\n    history.replace({ search: params });\n  }\n\n  const params = createParams(query, page);\n  React.useEffect(() => {\n    setPokedexParams(params);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params]);\n\n  return (\n    <main className=\"ph3 mt3 center content-narrow\">\n      <Search\n        search={query}\n        updateSearch={(newQuery) => {\n          update(newQuery, 0);\n        }}\n      />\n      <div className=\"flex justify-between ph2 nt2 pb3 bb border4 f6\">\n        <span className=\"fg3\">Search by name, number, or types</span>\n        <Link to=\"/pokedex/help\" className=\"underline fg-link OutlineFocus\">\n          Help\n        </Link>\n      </div>\n      {isLoading ? (\n        <div className=\"Spinner center mt4 f2\" />\n      ) : (\n        <Paginator\n          currentPage={page}\n          urlForPage={(newPage) => {\n            return createParams(query, newPage);\n          }}\n          pageSize={PAGE_SIZE}\n          emptyState={<p className=\"fg4 f4 b tc m0\">No Pokémon found</p>}\n          items={pkmn}\n          renderPage={(page) =>\n            page.map((pokemon) => (\n              <Monster key={pokemon.id} pokemon={pokemon} />\n            ))\n          }\n        />\n      )}\n    </main>\n  );\n}\n\n\n","import { PUBLIC_PATH } from \"./settings\";\n\nexport function getImage(id: string): string {\n  return new URL(`img/${id}.png`, PUBLIC_PATH).href;\n}\n","import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface ScreenPokdexHelpProps {\n  pokedexParams: string;\n}\n\nexport default function ScreenPokdexHelp({\n  pokedexParams,\n}: ScreenPokdexHelpProps) {\n  return (\n    <main className=\"pa3 center content-narrow lh-copy\">\n      <h2 className=\"lh-title f4\">Search by name</h2>\n      <p>\n        You can search for a Pokémon by name. If you only remember part of the\n        Pokémon&apos;s name, It can still probably find it for you. It\n        can&apos;t deal with typos right now though.\n      </p>\n      <h2 className=\"lh-title f4\">Search by number</h2>\n      <p>\n        Search by national dex number. If you want Bulbsaur, just type <i>1</i>,\n        not <i>#001</i>.\n      </p>\n      <h2 className=\"lh-title f4\">Search by type</h2>\n      <p>Here are a few examples of how to seach by type.</p>\n      <ul className=\"pl3\">\n        <li>\n          <code className=\"dib br2 ph2 bg3\">fire</code>\n          <p>\n            Search for Pokémon that have a fire as either of their types in any\n            form (e.g. Charmander, Charizard, Rotom).\n          </p>\n        </li>\n        <li>\n          <code className=\"dib br2 ph2 bg3\">water flying</code>\n          <p>\n            Search for Pokémon that are either water/flying (e.g. Gyarados) or\n            flying/water (e.g. Cramorant).\n          </p>\n        </li>\n        <li>\n          <code className=\"dib br2 ph2 bg3\">grass none</code>\n          <p>\n            Search for Pokémon that are only grass type, no 2nd type (e.g.\n            Tangela, Chikorita).\n          </p>\n        </li>\n      </ul>\n      <p>\n        <b aria-hidden=\"true\">&larr;</b>{\" \"}\n        <Link\n          to={`/pokedex/${pokedexParams}`}\n          className=\"underline fg-link OutlineFocus\"\n        >\n          Back to Pokédex\n        </Link>\n      </p>\n    </main>\n  );\n}\n","import classNames from \"classnames\";\nimport { closest } from \"fastest-levenshtein\";\nimport Papa from \"papaparse\";\nimport * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CoverageType, objectToCoverageType, stringToType, Type } from \"./data\";\nimport { pickFile } from \"./pickFile\";\nimport { saveFile } from \"./saveFile\";\n\nconst buttonClasses = classNames(\n  \"no-underline\",\n  \"db\",\n  \"ba br2 pv1 ph2\",\n  \"b f5\",\n  \"SimpleFocus\",\n  \"active-squish\",\n  \"border1 button-shadow button-bg button-bg-hover color-inherit\"\n);\n\ninterface WeaknessCoverageProps {\n  setCoverageTypes: (types: CoverageType[]) => void;\n  offenseParams: string;\n  fallbackCoverageTypes: CoverageType[];\n  isLoading: boolean;\n}\n\nexport default function ScreenWeaknessCoverage({\n  setCoverageTypes,\n  offenseParams,\n  fallbackCoverageTypes,\n  isLoading,\n}: WeaknessCoverageProps) {\n  const [lastUpdated, setLastUpdated] = React.useState(new Date());\n  const [statusText, setStatusText] = React.useState(\"\");\n  const statusRef = React.useRef<HTMLParagraphElement | null>(null);\n\n  React.useEffect(() => {\n    if (statusRef.current instanceof HTMLElement) {\n      statusRef.current.scrollIntoView();\n    }\n  }, [lastUpdated]);\n\n  function saveCSV() {\n    const csv = Papa.unparse(\n      {\n        fields: [\"Number\", \"Name\", \"Type 1\", \"Type 2\"],\n        data: fallbackCoverageTypes.map((t) => {\n          const type2 = t.type2 === Type.NONE ? \"\" : t.type2;\n          return [t.number, t.name, t.type1, type2];\n        }),\n      },\n      {\n        header: true,\n        skipEmptyLines: true,\n      }\n    );\n    saveFile({\n      filename: \"pkmn.help type coverage.csv\",\n      type: \"text/csv\",\n      data: csv,\n    });\n    setStatusText(\"Exported default Pokémon forms\");\n    setLastUpdated(new Date());\n  }\n\n  async function loadCSV() {\n    const file = await pickFile({ accept: \".csv\" });\n    if (!file) {\n      return;\n    }\n    const text = await file.text();\n    const result = Papa.parse(text, {\n      header: true,\n      skipEmptyLines: true,\n      transformHeader: (header) => {\n        return closest(header.toLowerCase().replace(/[a-z0-9]/i, \"\"), [\n          \"number\",\n          \"name\",\n          \"type1\",\n          \"type2\",\n        ]);\n      },\n      transform: (value, field) => {\n        if (field === \"type1\") {\n          return stringToType(value, Type.NORMAL);\n        }\n        if (field === \"type2\") {\n          return stringToType(value, Type.NONE);\n        }\n        return value;\n      },\n    });\n    if (result.errors.length > 0) {\n      alert(\"Error loading CSV. Don't change header names.\");\n      return;\n    }\n    const newCoverageTypes = result.data.map(objectToCoverageType);\n    setStatusText(\n      `Imported ${newCoverageTypes.length} Pokémon forms from \"${file.name}\"`\n    );\n    setCoverageTypes(newCoverageTypes);\n    setLastUpdated(new Date());\n  }\n\n  function loadDefault() {\n    setStatusText(\"Loaded default Pokémon forms\");\n    setCoverageTypes(fallbackCoverageTypes);\n    setLastUpdated(new Date());\n  }\n\n  return (\n    <main className=\"pa3 center content-narrow lh-copy\">\n      <h2 className=\"lh-title f5\">Weakness Coverage</h2>\n      <p>\n        Import/export custom Pokédex CSV files to see weakness coverage for\n        different Pokémon. Create a custom CSV file with just the OU tier\n        Pokémon, or even create your own Pokémon from scratch.\n      </p>\n      <p>\n        CSV data is loaded by column header name, not column order, so you can\n        add or re-order columns if you want (e.g. add a &quot;tier&quot; column,\n        or a &quot;notes&quot; column).\n      </p>\n      <p>\n        CSV files can be edited with Google Sheets, Microsoft Excel, OpenOffice,\n        LibreOffice, Notepad, and more.\n      </p>\n      {isLoading ? (\n        <div className=\"Spinner center mt4 f2\" />\n      ) : (\n        <div className=\"pt2 ButtonGrid\">\n          <button\n            type=\"button\"\n            className={buttonClasses}\n            onClick={() => {\n              saveCSV();\n            }}\n          >\n            Export\n          </button>\n          <span>Export the default Pokédex to a CSV file</span>\n\n          <button\n            type=\"button\"\n            className={buttonClasses}\n            onClick={() => {\n              loadCSV();\n            }}\n          >\n            Import\n          </button>\n          <span>Import an edited Pokédex CSV file</span>\n\n          <button\n            type=\"button\"\n            className={buttonClasses}\n            onClick={() => {\n              loadDefault();\n            }}\n          >\n            Reset\n          </button>\n          <span>Reset to the default Pokédex</span>\n        </div>\n      )}\n      <p className=\"f4 b\" hidden={!statusText} ref={statusRef}>\n        {statusText}\n      </p>\n      <p>\n        <b aria-hidden=\"true\">&larr;</b>{\" \"}\n        <Link\n          to={`/offense/${offenseParams}`}\n          className=\"underline fg-link OutlineFocus\"\n        >\n          Back to offense\n        </Link>\n      </p>\n    </main>\n  );\n}\n","export function saveFile({\n  filename,\n  type,\n  data,\n}: {\n  filename: string;\n  type: string;\n  data: string;\n}): void {\n  const file = new File([data], filename, { type });\n  const url = URL.createObjectURL(file);\n  const a = document.createElement(\"a\");\n  a.download = filename;\n  a.href = url;\n  a.click();\n  URL.revokeObjectURL(url);\n}\n","export async function pickFile({\n  accept,\n}: {\n  accept: string;\n}): Promise<File | undefined> {\n  return new Promise((resolve) => {\n    const input = document.createElement(\"input\");\n    input.type = \"file\";\n    input.accept = accept;\n    input.onchange = () => {\n      resolve(input.files?.[0]);\n    };\n    input.click();\n  });\n}\n","import classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nimport { Link, NavLink, Redirect, Route, Switch, HashRouter } from \"react-router-dom\";\nimport { useMediaQuery } from \"usehooks-ts\";\nimport { useRegisterSW } from \"virtual:pwa-register/react\";\nimport { Button } from \"./Button\";\nimport { CoverageType, Pokemon, Type } from \"./data\";\nimport ScreenDefense from \"./ScreenDefense\";\nimport ScreenMore from \"./ScreenMore\";\nimport ScreenOffense from \"./ScreenOffense\";\nimport ScreenPokedex from \"./ScreenPokedex\";\nimport ScreenPokedexHelp from \"./ScreenPokedexHelp\";\nimport ScreenWeaknessCoverage from \"./ScreenWeaknessCoverage\";\nimport { PUBLIC_PATH } from \"./settings\";\nimport { useTheme } from \"./useTheme\";\nimport { useUpdateSW } from \"./useUpdateSW\";\n\nconst bannerClass = classNames([\n  \"button-shadow\",\n  \"bg1 fg1\",\n  \"border2 ba\",\n  \"br2 pa3\",\n  \"justify-center flex\",\n]);\n\nconst tabClass = classNames([\n  \"no-underline\",\n  \"pv2 ph2 f5\",\n  \"TabFocus\",\n  \"b bn\",\n  \"br--top br2\",\n  \"bg-transparent\",\n  \"fg3 bottom-border-thick\",\n]);\n\nconst tabClassActive = classNames([\"fg1 bottom-border-thick-current\"]);\n\nexport default function App() {\n  const {\n    needRefresh: [needRefresh, setNeedRefresh],\n    offlineReady: [offlineReady, setOfflineReady],\n    updateServiceWorker,\n  } = useRegisterSW();\n  useUpdateSW();\n  const [defenseParams, setDefenseParams] = React.useState(\"\");\n  const [offenseParams, setOffenseParams] = React.useState(\"\");\n  const [pokedexParams, setPokedexParams] = React.useState(\"\");\n  const [isLoading, setIsLoading] = React.useState(true);\n  const [coverageTypes, setCoverageTypes] = React.useState<CoverageType[]>([]);\n  const [fallbackCoverageTypes, setFallbackCoverageTypes] = React.useState<\n    CoverageType[]\n  >([]);\n  const [AllPokemon, setAllPokemon] = React.useState<Pokemon[]>([]);\n  const [attemptTime, setAttemptTime] = React.useState(Date.now());\n  React.useEffect(() => {\n    async function load() {\n      const filename = \"data-pkmn.json\";\n      try {\n        const bigURL = new URL(filename, PUBLIC_PATH).href;\n        const resp = await fetch(bigURL);\n        const allPokemon: Pokemon[] = await resp.json();\n        const fallbackCoverageTypes = allPokemon.map<CoverageType>((pkmn) => {\n          return {\n            number: String(pkmn.number),\n            name: pkmn.name,\n            type1: pkmn.types[0],\n            type2: pkmn.types[1] ?? Type.NONE,\n          };\n        });\n        setIsLoading(false);\n        setCoverageTypes(fallbackCoverageTypes);\n        setFallbackCoverageTypes(fallbackCoverageTypes);\n        setAllPokemon(allPokemon);\n      } catch (err) {\n        console.warn(`Failed to download ${filename}`, err);\n        const retryDelay = 60 * 1000;\n        // Retry every minute until the JSON finishes downloading\n        setTimeout(() => {\n          setAttemptTime(Date.now());\n        }, retryDelay);\n      }\n    }\n    load();\n  }, [attemptTime]);\n  const [theme] = useTheme();\n  const isDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n  const isDark = theme === \"dark\" || (theme === \"auto\" && isDarkMode);\n  const themeColor = isDark ? \"hsl(350, 70%, 40%)\" : \"hsl(357, 97%, 46%)\";\n  const themeAuto = isDarkMode ? \"dark\" : \"light\";\n  return (\n    <HelmetProvider>\n      <div className=\"flex-auto\">\n        <Helmet>\n          <html data-theme={theme} data-theme-auto={themeAuto} />\n          <meta name=\"theme-color\" content={themeColor} />\n        </Helmet>\n        <h1 className=\"f3-ns f4 tc relative white PokeballHeader\">\n          <Link to=\"/\" className=\"no-underline white OutlineFocus\">\n            Pokémon Type Calculator\n          </Link>\n        </h1>\n        <nav\n          className={classNames([\n            \"flex justify-center\",\n            \"bg1\",\n            \"bb border2 TabBarShadow\",\n            \"pt3\",\n          ])}\n        >\n          <NavLink\n            className={tabClass}\n            activeClassName={tabClassActive}\n            to={`/offense/${offenseParams}`}\n          >\n            Offense\n          </NavLink>\n          <NavLink\n            className={tabClass}\n            activeClassName={tabClassActive}\n            to={`/defense/${defenseParams}`}\n          >\n            Defense\n          </NavLink>\n          <NavLink\n            className={tabClass}\n            activeClassName={tabClassActive}\n            to={`/pokedex/${pokedexParams}`}\n          >\n            Pokédex\n          </NavLink>\n          <NavLink\n            className={tabClass}\n            activeClassName={tabClassActive}\n            to=\"/more/\"\n          >\n            More\n          </NavLink>\n        </nav>\n        {(needRefresh || offlineReady) && (\n          <div className=\"ph3 mw6 center grid gap3 pa3\">\n            {needRefresh && (\n              <div className={bannerClass}>\n                <span className=\"flex flex-auto items-center\">\n                  An update is available\n                </span>\n                <Button\n                  className=\"ml3\"\n                  type=\"button\"\n                  onClick={() => {\n                    updateServiceWorker(true);\n                    setNeedRefresh(false);\n                  }}\n                >\n                  Update\n                </Button>\n              </div>\n            )}\n            {offlineReady && (\n              <div className={bannerClass}>\n                <span className=\"flex flex-auto items-center\">\n                  Offline mode is now available\n                </span>\n                <Button\n                  className=\"ml3\"\n                  type=\"button\"\n                  onClick={() => {\n                    setOfflineReady(false);\n                  }}\n                >\n                  Dismiss\n                </Button>\n              </div>\n            )}\n          </div>\n        )}\n        <Switch>\n          <Route\n            exact\n            path=\"/offense/coverage/\"\n            render={() => (\n              <ScreenWeaknessCoverage\n                setCoverageTypes={setCoverageTypes}\n                offenseParams={offenseParams}\n                fallbackCoverageTypes={fallbackCoverageTypes}\n                isLoading={isLoading}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/offense/\"\n            render={() => (\n              <ScreenOffense\n                coverageTypes={coverageTypes}\n                setCoverageTypes={setCoverageTypes}\n                setOffenseParams={setOffenseParams}\n                fallbackCoverageTypes={fallbackCoverageTypes}\n                isLoading={isLoading}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/defense/\"\n            render={() => (\n              <ScreenDefense\n                setDefenseParams={setDefenseParams}\n                fallbackCoverageTypes={fallbackCoverageTypes}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/pokedex/help/\"\n            render={() => <ScreenPokedexHelp pokedexParams={pokedexParams} />}\n          />\n          <Route\n            exact\n            path=\"/pokedex/\"\n            render={() => (\n              <ScreenPokedex\n                setPokedexParams={setPokedexParams}\n                allPokemon={AllPokemon}\n                isLoading={isLoading}\n              />\n            )}\n          />\n          <Route exact path=\"/more/\" component={ScreenMore} />\n          <Redirect to=\"/defense/\" />\n        </Switch>\n      </div>\n    </HelmetProvider>\n  );\n}\n","import * as React from \"react\";\n\ninterface UpdateSW {\n  type: \"updating\" | \"pending\";\n  lastUpdateCheck: number;\n}\n\n// const checkInterval = 60 * 60 * 1000;\nconst checkInterval = 2 * 60 * 1000;\n\nexport function useUpdateSW(): UpdateSW {\n  const [state, setState] = React.useState<UpdateSW>({\n    type: \"pending\",\n    lastUpdateCheck: Date.now(),\n  });\n  React.useEffect(() => {\n    if (import.meta.env.DEV) {\n      return;\n    }\n    const update = async () => {\n      if (document.hidden) {\n        return;\n      }\n      const date = new Date();\n      if (date.valueOf() - state.lastUpdateCheck < checkInterval) {\n        return;\n      }\n      const reg = await navigator.serviceWorker.getRegistration();\n      if (reg) {\n        try {\n          setState({\n            type: \"updating\",\n            lastUpdateCheck: date.valueOf(),\n          });\n          await reg.update();\n        } catch (err) {\n          console.error(err);\n        } finally {\n          setState({\n            type: \"pending\",\n            lastUpdateCheck: date.valueOf(),\n          });\n        }\n      }\n    };\n    document.addEventListener(\"visibilitychange\", update);\n    document.addEventListener(\"focus\", update);\n    return () => {\n      document.removeEventListener(\"visibilitychange\", update);\n      document.removeEventListener(\"focus\", update);\n    };\n  }, [state]);\n  return state;\n}\n","import * as React from \"react\";\n\ninterface ErrorBoundaryProps {\n  render: (error: Error) => React.ReactNode;\n}\n\ninterface ErrorBoundaryState {\n  error?: Error;\n}\n\nexport default class ErrorBoundary extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {};\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { error };\n  }\n\n  render() {\n    if (this.state.error) {\n      return this.props.render(this.state.error);\n    }\n    return this.props.children;\n  }\n}\n","import * as React from \"react\";\n\ntype ScreenErrorProps = {\n  error: Error;\n};\n\nconst ScreenError: React.FC<ScreenErrorProps> = ({ error }) => {\n  return (\n    <div className=\"sans-serif ph4 content-narrow f4 center fg2 lh-copy\">\n      <h1>pkmn.help: Error</h1>\n      <p>\n        Please send an email to{\" \"}\n        <a href=\"mailto:brian@wavebeem.com\" className=\"fg-link\">\n          brian@wavebeem.com\n        </a>{\" \"}\n        describing how to reproduce this error, and include the following error\n        message:\n      </p>\n      <pre className=\"f5 bg1 pa2 br2 ba border2 overflow-x-auto\">\n        {error.message}\n      </pre>\n      <p>\n        <b aria-hidden=\"true\">&larr;</b>{\" \"}\n        <a href=\"/\" className=\"f3 fg-link\">\n          Back to pkmn.help\n        </a>\n      </p>\n    </div>\n  );\n};\n\nexport default ScreenError;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"tachyons\";\nimport App from \"./App\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport ScreenError from \"./ScreenError\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary render={(error) => <ScreenError error={error} />}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.querySelector(\"#app\")\n);\n"],"names":["options","immediate","onNeedRefresh","onOfflineReady","onRegistered","onRegisterError","needRefresh","setNeedRefresh","useState","offlineReady","setOfflineReady","updateServiceWorker","wb","registration","navigator","Workbox","scope","addEventListener","event","isUpdate","showSkipWaitingPrompt","register","then","r","catch","e","async","reloadPage","location","reload","waiting","messageSW","type","registerSW","_a","className","_b","props","__spreadProps","classNames","baseClasses","Type","Type2","str","types","some","t","split","filter","isType","typesOrNone","NORMAL","FIGHTING","FLYING","POISON","GROUND","ROCK","BUG","GHOST","STEEL","FIRE","WATER","GRASS","ELECTRIC","PSYCHIC","ICE","DRAGON","DARK","FAIRY","NONE","string","fallback","toLowerCase","replace","closest","Effectiveness","Effectiveness2","t1","t2","obj","ct","number","name","type1","stringToType","type2","pairs","flatMap","row","i","map","data","j","keyForTypes","table","Object","fromEntries","ta1","ta2","tb","x3","Error","constructor","effectiveness","matchups","typesFor","effectivenes","this","m","offenseTypes","length","Matchup","effs","offense","matchupFor","max","Math","GroupedMatchups","eff","value","style","width","background","DexCoverage","coverageTypes","isLoading","count","types2","REGULAR","total","percent","toFixed","PercentBar","cssType","margin","padding","title","Badge","key","kind","formatTitle","fallbackCoverageTypes","id","Link","to","Section","QUADRUPLE","DOUBLE","HALF","QUARTER","ZERO","Matchups","x","defensiveMatchups","offensiveMatchups","onChange","includeNone","disabledTypes","theTypes","styles","isDisabled","includes","isSelected","style2","disabled","onClick","height","lineHeight","location2","useLocation","URLSearchParams","search","setDefenseParams","fragment","hash","slice","element","document","getElementById","HTMLElement","scrollIntoView","useSearch","history","useHistory","typesFromString","get","params2","set","join","createParams","params","classH2","TypeSelector","Matchups.Defense","_c","label","ariaLabel","helpText","_d","theme","setTheme","useLocalStorage","year","Date","getFullYear","reg","serviceWorker","getRegistrations","unregister","err","warn","languages","themes","language","setLanguage","useLanguage","useTheme","href","role","Select","target","lang","theme2","Button","unregisterServiceWorker","isChecked","Set","delete","add","sort","setCoverageTypes","setOffenseParams","MultiTypeSelector","Matchups.Offense","PUBLIC_PATH","URL","window","weatherBoosted","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","none","_e","_f","tabIndex","Location","Location2","numPages","pageItems","currentPage","urlForPage","hasPrev","hasNext","scrollTo","setScrollTo","React.useState","TOP","BOTTOM","body","scrollHeight","LinkButton","toString","padStart","pageSize","emptyState","items","renderPage","ceil","PageSelector","languages2","s","en","__spreadValues","xmlns","viewBox","d","updateSearch","ref","React.useRef","IconSearch","left","top","autoComplete","autoCorrect","inputMode","autoCapitalize","paddingLeft","paddingRight","IconClear","current","focus","dn","right","index","classnames","ml1","getWeatherBoosted","Dex","el","find","el2","Lvl","CP","AtkIV","DefIV","StaIV","pokemon_id","distance","pokemon","displayNumber","String","speciesName","pickTranslation","speciesNames","formName","formNames","src","alt","MonsterType","WeatherBoosted","findByDex","DataPvpGL","DataPvpUL","findByDexToCandy","findByDexToCandyAll","DataBuddyCandies","evolutions","textDecoration","pokemon_name","candy_required","findByDexFromEvo","DataEvolutions","item_required","lure_required","gender_required","must_be_buddy_to_evolve","buddy_distance_required","only_evolves_in_nighttime","only_evolves_in_daytime","no_candy_cost_if_traded","findByDexToEvolutions","allPokemon","setPokedexParams","query","debouncedQuery","useDebounce","page","Number","searchablePkmn","React.useMemo","p","pkmn","trim","test","isTypeOrNone","matchSorter","keys","newQuery","newPage","Search","Paginator","page2","Monster","pokedexParams","displayName","buttonClasses","offenseParams","lastUpdated","setLastUpdated","statusText","setStatusText","statusRef","filename","file","File","url","createObjectURL","a","createElement","download","click","revokeObjectURL","Papa","unparse","fields","header","skipEmptyLines","accept","Promise","resolve","input","onchange","files","pickFile","text","result","parse","transformHeader","transform","field","errors","newCoverageTypes","objectToCoverageType","hidden","bannerClass","tabClass","tabClassActive","useRegisterSW","state","setState","lastUpdateCheck","now","update","date","valueOf","getRegistration","error","removeEventListener","defenseParams","setIsLoading","setFallbackCoverageTypes","AllPokemon","setAllPokemon","attemptTime","setAttemptTime","bigURL","resp","fetch","json","fallbackCoverageTypes2","isDarkMode","useMediaQuery","themeColor","themeAuto","HelmetProvider","Helmet","content","NavLink","activeClassName","Switch","Route","exact","path","render","ScreenWeaknessCoverage","ScreenOffense","ScreenDefense","ScreenPokedexHelp","ScreenPokedex","component","ScreenMore","Redirect","React.Component","children","ScreenError","message","ReactDOM.render","React.StrictMode","ErrorBoundary","BrowserRouter","App","querySelector"],"mappings":"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"}